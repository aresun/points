{"version":3,"sources":["utils/interval.js","redux/reducers/tagList.js","redux/actions/actionTypes.js","redux/reducers/tagSessionList.js","redux/reducers/pointList.js","redux/reducers/pointSessionList.js","redux/reducers/ejectBoard.js","redux/reducers/tagBelongList.js","redux/reducers/hoverOn.js","redux/reducers/switchUIstatus.js","redux/reducers/rootReducer.js","redux/store.js","utils/dev/lib.js","components/CodeInput/CodeInput.jsx","utils/code.js","components/CodeInput/Code/Code.jsx","pages/Entrance/Entrance.jsx","components/InputControls/Indicator/Indicator.jsx","components/InputControls/Input/Input.jsx","redux/actions/actions.js","utils/domHolder.js","hooks/useHoverOnHandler.js","components/InputControls/Clear/Clear.jsx","utils/clipboard.js","components/InputControls/Copy/Copy.jsx","components/common/PointIndicator/PointIndicator.jsx","components/common/Cross/Cross.jsx","components/common/CircleAdd/CircleAdd.jsx","components/InputControls/Add/Add.jsx","components/InputControls/AddTag/AddTag.jsx","components/common/CircleSearch/CircleSearch.jsx","hooks/useHandleClickSearchPoint.js","components/InputControls/Search/Search.jsx","hooks/useHandleClickSearchTag.js","components/InputControls/SearchTag/SearchTag.jsx","utils/encrypt.js","components/InputControls/Clipboard/Clipboard.jsx","components/InputControls/Append/Append.jsx","components/InputControls/HighlightInput/HighlightCircle/HighlightCircle.jsx","components/InputControls/HighlightInput/HighlightInput.jsx","components/InputControls/InputControls.jsx","components/common/Tag/TagCross/TagCross.jsx","components/common/Tag/Tag.jsx","components/common/PageBoard/PageBoard.jsx","utils/getListByPage.js","hooks/usePagedList.js","components/Engine/TagList/TagList.jsx","components/common/SessionControl/Return/Return.jsx","components/common/SessionControl/RemoveSession/RemoveSession.jsx","components/common/SessionControl/SessionControl.jsx","hooks/useReturnSessionHandler.js","hooks/useHandleEnterLeaveRetrun.js","hooks/useHandleEnterLeaveRemoveSession.js","components/Engine/TagSession/TagSession.jsx","components/Engine/SwitchUI/SwitchUI.jsx","components/Engine/TagBelongList/TagBelong/TagBelong.jsx","components/Engine/TagBelongList/TagBelongList.jsx","components/common/Point/Point.jsx","hooks/useHoverHandlerOnPoint.js","components/Engine/PointList/PointList.jsx","components/Engine/PointSession/EjectBoard/EjectBoard.jsx","hooks/useClickPointHandlerOfSessionList.js","components/Engine/PointSession/PointSession.jsx","components/Engine/Engine.jsx","components/DataControls/Exit/Exit.jsx","components/common/DataSpot/DataSpot.jsx","components/DataControls/ToUI/ToUI.jsx","components/DataControls/ToStorage/ToStorage.jsx","components/DataControls/Erase/Erase.jsx","components/DataControls/Weekday/Weekday.jsx","components/DataControls/Time/Time.jsx","utils/time.js","components/DataControls/Day/Day.jsx","components/DataControls/DataControls.jsx","pages/Manage/Manage.jsx","App.jsx","serviceWorker.js","index.js"],"names":["intervalId","tagList","state","action","type","tag","value","id","Date","now","filter","i","arr","length","idExistedInStore","map","tagInStore","allTheTagIsNewToStore","tagInAction","indexOf","idListForRemove","tagSessionList","pointList","point","pointValue","status","newPointListForConcat","pointSessionList","pointInAction","isThisPointExistedInStore","ri","pointIdListForRemove","pointInStore","newPointList","isExistedInPointSessionList","Object","assign","ejectBoard","isOn","targetStatus","tagBelongList","hoverOn","target","switchUIstatus","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","reverseThroughArray","console","log","bind","time","timeEnd","array","processItem","trim","str","replace","tasks","start","intervalDuration","setInterval","task","stop","clearInterval","CodeInput","props","className","children","codes","secret","setCode","n","parseInt","isAllMatched","isValid","withRouter","idx","history","useState","setValue","inputEl","useRef","useEffect","setTimeout","current","focus","onChange","e","inputValue","test","push","nextDom","nextElementSibling","undefined","prevDom","previousElementSibling","select","ref","Entrance","document","title","Indicator","connect","ownProps","isHoverOnClearInput","isHoverOnHighlight","dispatch","handleKeyUp","useCallback","onKeyUp","returnWholeTagSession","clearTagSession","concatTagList","recieveTag","removeTag","overrideTagList","removeTagList","addTagToSession","removeTagInSession","appendTagSessionList","removePoint","recievePoint","concatPointList","overridePointList","removePointList","addPointToSession","removePointInSession","clearPointSession","appendPointSession","setClickableEjectBoard","overrideTagBelongList","setHoverOn","getInputDom","querySelector","useHoverOnHandler","mouseEnterProcedure","mouseLeaveProcedure","setHoverOnProcedure","removeHoverOnProcedure","handleClick","dom","handleMouseEnter","handleMouseLeave","onClick","onMouseEnter","onMouseLeave","copyStringToClipboard","textArea","createElement","style","position","top","left","width","height","padding","border","outline","boxShadow","background","body","appendChild","execCommand","err","throwError","toString","removeChild","Copy","valueToCopy","PointIndicator","appendClass","handler","innerPointclassName","pointStatus","Cross","CircleAdd","mouseEnterHandler","mouseLeaveHandler","addPointProcedure","addPoint","addTagProcedure","addTag","CircleSearch","clickHandler","isSearchUnfinished","isSearchTag","useHandleClickSearchPoint","sourceList","tagListMustContained","processResultProcedure","stringForSearching","toLowerCase","needCheckTitle","needCheckTagList","searchResult","isTitleMatched","isContainAllTheTagList","isThisPointFinished","currentTagId","rj","isThisTagExistedInThisPointTagList","result","movePointListToSessionProcedure","searchedPointList","handleClickSearch","useHandleClickSearchTag","matchedTagList","handleClickSearchTag","key","CryptoJS","enc","Utf8","parse","iv","text","data","JSON","stringify","AES","encrypt","mode","CBC","pad","Pkcs7","appendDataToSessionProcedure","appendStringDataToSession","dataObject","inputString","decrypted","decrypt","isArray","Array","HighlightInput","isHoverOnSwitchUI","isHidden","TagCross","Tag","PageBoard","handleClickTop","handleClickBottom","isPageNumberInRange","targetPage","maxPage","usePagedList","page","setPage","theList","lengthOfOnePage","Math","ceil","getMaxPageNumber","pagedPointList","pageTo","end","slice","getListByPage","pageToJump","isHoverOnAddTag","isHoverOnSearchTag","isHoverOnClipboard","isHoverOnAppend","isHoverOnToUI","isHoverOnToStorage","moveTagToSessionProcedure","moveTagToSession","Return","handleEnter","handleLeave","RemoveSession","SessionControl","removeHandler","returnHandler","handleEnterReturn","handleLeaveReturn","handleEnterRemoveSession","handleLeaveRemoveSession","useReturnSessionHandler","procedure","sessionList","useHandleEnterLeaveReturn","readyToReturn","setReadyToReturn","useHandleEnterLeaveRemoveSession","readyToRemoveSession","setReadyToRemoveSession","returnThisTagProcedure","returnThisTag","returnWholeSessionProcedure","removeSessionProcedure","pagedList","classNameOfListHolder","isSelfOn","turnOffEjectBoardProcedure","toggleSwitchUIstatusProcedure","setSwitchUIstatus","TagBelong","tagString","isHoverOnSeachUnfinished","isHoverOnSeachFinished","toggleHandler","pointInnerHtml","match","$1","dangerouslySetInnerHTML","__html","useHoverHandlerOnPoint","overrideTagBelongListProcedure","clearTagBelongListProcedure","isHoverOnAddPoint","movePointToSessionProcedure","movePointToSession","isDisabled","clickable","setClickableProcedure","backgroundColor","useClickPointHandlerOfSessionList","ejectBoardIsOn","returnThisPointProcedure","returnTagSessionListProcedure","ejectThisPointProcedure","isHoverOnStorage","returnThisPoint","returnWholePointSession","ejectThisPoint","clickPointIndicatorToTogglePointStatusProcedure","togglePointStatusInSession","clickPointHandler","isHoverOnErase","DataSpot","overrideTagListProcedure","overridePointProcedure","localStorage","getItem","setItem","removeUIdataProcedure","removeItem","Weekday","setVisibility","domIndex","getDay","visibility","getDateOfThisDom","date","today_date_number","getDate","today_day_of_week","num","Time","setTime","fun","taskIndex","hour","getHours","minute","getMinutes","second","getSeconds","getCurrentTimeString","index","splice","Day","year","getFullYear","month","getMonth","day","getCurrentDayString","shortcutHandler","altKey","click","shiftKey","addEventListener","removeEventListener","App","from","to","exact","path","component","Manage","Boolean","window","location","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"8hCAKIA,E,gECsDWC,EAlDC,WAAyB,IAAxBC,EAAuB,uDAAf,GAAIC,EAAW,uCAClC,OAAQA,EAAOC,MACT,ICPW,UDQL,MAAM,CAAE,CACFC,IAAKF,EAAOG,MACZC,GAAI,GAAKC,KAAKC,QAFpB,mBAGMP,IACZ,ICXc,aDYR,OAAOA,EAAMQ,QAAO,SAACL,EAAKM,EAAGC,GACvB,OAAOP,EAAIE,KAAOJ,EAAOE,IAAIE,MAEzC,ICde,cDeT,OAAQL,EAAMQ,QAAO,SAACL,EAAKM,EAAGC,GAClB,OAAOP,EAAIE,KAAOJ,EAAOE,IAAIE,MAC/BM,OAAS,EACbX,EAHC,CAGQ,CACGG,IAAKF,EAAOE,IAAIA,IAChBE,GAAIJ,EAAOE,IAAIE,KAL1B,mBAOQL,IAErB,ICvBmB,kBDwBb,IAAMY,EAAmBZ,EAAMa,KAAI,SAACC,EAAYL,EAAGC,GAC7C,OAAOI,EAAWT,MAElBU,EAAwBd,EAAOF,QAAQS,QAAO,SAACQ,EAAaP,EAAGC,GAC/D,OAAuD,IAA/CE,EAAiBK,QAAQD,EAAYX,OAEnD,OAAOU,EAAsBJ,OAAS,EAA/B,sBACQX,GADR,YAEQe,IAETf,EAEZ,ICnCqB,oBDoCf,OAAO,YACEC,EAAOF,SAEtB,ICtCmB,kBDuCb,IAAMmB,EAAkBjB,EAAOF,QAAQc,KAAI,SAACV,EAAKM,EAAGC,GAC9C,OAAOP,EAAIE,MAEjB,OAAOL,EAAMQ,QAAO,SAACL,EAAKM,EAAGC,GACvB,OAA4C,IAArCQ,EAAgBD,QAAQd,EAAIE,OAE/C,QACM,OAAOL,IElBVmB,EA9BQ,WAAyB,IAAxBnB,EAAuB,uDAAf,GAAIC,EAAW,uCACzC,OAAQA,EAAOC,MACT,IDMsB,qBCLhB,MAAM,CAAE,CACFC,IAAKF,EAAOE,IAAIA,IAChBE,GAAIJ,EAAOE,IAAIE,KAFrB,mBAGML,IACZ,IDEyB,wBCDnB,OAAOA,EAAMQ,QAAO,SAACL,EAAKM,EAAGC,GACvB,OAAOP,EAAIE,KAAOJ,EAAOE,IAAIE,MAEzC,IDDqB,oBCEf,MAAO,GACb,IDF4B,2BCGtB,IAAMO,EAAmBZ,EAAMa,KAAI,SAACC,EAAYL,EAAGC,GAC7C,OAAOI,EAAWT,MAElBU,EAAwBd,EAAOF,QAAQS,QAAO,SAACQ,EAAaP,EAAGC,GAC/D,OAAuD,IAA/CE,EAAiBK,QAAQD,EAAYX,OAEnD,OAAOU,EAAsBJ,OAAS,EAA/B,sBACQX,GADR,YAEQe,IAETf,EACZ,QACM,OAAOA,ICsCVoB,EA9DG,WAAyB,IAAxBpB,EAAuB,uDAAf,GAAIC,EAAW,uCACpC,OAAQA,EAAOC,MACT,IFaa,YEZP,MAAM,CAAE,CACImB,MAAOpB,EAAOqB,WACdvB,QAASE,EAAOkB,eAChBI,QAAQ,EACRlB,GAAIC,KAAKC,QAJrB,mBAMSP,IAEf,IFMiB,gBELX,OAAQA,EAAMQ,QAAO,SAACa,EAAOZ,EAAGC,GACpB,OAAOW,EAAMhB,KAAOJ,EAAOoB,MAAMhB,MACnCM,OAAS,EACbX,EAHC,CAGQ,CACGqB,MAAOpB,EAAOoB,MAAMA,MACpBtB,QAASE,EAAOoB,MAAMtB,QACtBwB,OAAQtB,EAAOoB,MAAME,OACrBlB,GAAIJ,EAAOoB,MAAMhB,KAP5B,mBASQL,IAErB,IFPgB,eEQV,OAAOA,EAAMQ,QAAO,SAACa,EAAOZ,EAAGC,GACzB,OAAOW,EAAMhB,KAAOJ,EAAOoB,MAAMhB,MAE7C,IFTqB,oBEUf,IAAMmB,EAAwBvB,EAAOwB,iBAAiBjB,QAAO,SAACkB,EAAejB,EAAGC,GAI1E,IAHA,IAAIiB,GAA4B,EAE5BC,EAAK5B,EAAMW,OACRiB,KACD,GAAI5B,EAAM4B,GAAIvB,KAAOqB,EAAcrB,GAAI,CACjCsB,GAA4B,EAC5B,MAIZ,OAAQA,KAEd,OAAOH,EAAsBb,OAAS,EAA/B,sBACQX,GADR,YAEQC,EAAOwB,mBAEhBzB,EACZ,IF3BuB,sBE4BjB,OAAO,YACEC,EAAOmB,WAEtB,IF9BqB,oBE+Bf,IAAMS,EAAuB5B,EAAOmB,UAAUP,KAAI,SAACQ,EAAOZ,EAAGC,GACvD,OAAOW,EAAMhB,MAEnB,OAAOL,EAAMQ,QAAO,SAACsB,EAAcrB,EAAGC,GAChC,OAA0D,IAAnDmB,EAAqBZ,QAAQa,EAAazB,OAE7D,QACM,OAAOL,ICFVyB,EAzDU,WAAyB,IAAxBzB,EAAuB,uDAAf,GAAIC,EAAW,uCAC3C,OAAQA,EAAOC,MACT,IHyBwB,uBGxBlB,MAAM,CAAE,CACImB,MAAOpB,EAAOoB,MAAMA,MACpBtB,QAASE,EAAOoB,MAAMtB,QACtBwB,OAAQtB,EAAOoB,MAAME,OACrBlB,GAAIJ,EAAOoB,MAAMhB,KAJ7B,mBAMSL,IAEf,IHiB2B,0BGhBrB,OAAOA,EAAMQ,QAAO,SAACa,EAAOZ,EAAGC,GACzB,OAAOW,EAAMhB,KAAOJ,EAAOoB,MAAMhB,MAE7C,IHcuB,sBGbjB,MAAO,GACb,IHawB,uBGZlB,IAAM0B,EAAe9B,EAAOmB,UAAUZ,QAAO,SAACkB,EAAejB,EAAGC,GAG1D,IAFA,IAAIkB,EAAK5B,EAAMW,OACXqB,GAA8B,EAC3BJ,KACD,GAAI5B,EAAM4B,GAAIvB,KAAOqB,EAAcrB,GAAI,CACjC2B,GAA8B,EAC9B,MAGZ,OAAQA,KAEd,OAAOD,EAAapB,OAAS,EAAtB,sBACQX,GADR,YAEQ+B,IAET/B,EACZ,IHHkC,iCGGlC,IAEYqB,EAKFpB,EALEoB,MAFZ,EAOUpB,EAJEoB,MACMhB,EAJlB,EAIkBA,GACAkB,EALlB,EAKkBA,OAIZ,OAAOvB,EAAMa,KAAI,SAACiB,EAAcrB,EAAGC,GAC7B,OAAIoB,EAAazB,KAAOA,EACX4B,OAAOC,OAAO,GAAIb,EAAO,CAC1BE,QAASA,IAGRO,KAGzB,QACM,OAAO9B,IC7CVmC,EAZI,WAEJ,IAFKnC,EAEN,uDAFc,CACtBoC,MAAM,GACTnC,EAAW,uCACR,OAAQA,EAAOC,MACT,IJoC6B,4BInCvB,MAAO,CACDkC,KAAMnC,EAAOoC,cAEnB,QACM,OAAOrC,ICKhBsC,EAbO,WAAyB,IAAxBtC,EAAuB,uDAAf,GAAIC,EAAW,uCACxC,OAAQA,EAAOC,MACT,IL0C4B,2BKzCtB,OAAO,YACED,EAAOoB,MAAMtB,SAE5B,ILuCyB,wBKtCnB,MAAO,GACb,QACM,OAAOC,ICCVuC,EAVC,WAAyB,IAAxBvC,EAAuB,uDAAf,GAAIC,EAAW,uCAClC,OAAQA,EAAOC,MACT,INgDgB,eM/CV,OAAOD,EAAOuC,OACpB,IN+CmB,kBM9Cb,MAAO,GACb,QACM,OAAOxC,ICAVyC,EARQ,WAA4B,IAA3BzC,EAA0B,wDAAXC,EAAW,uCAC5C,OAAQA,EAAOC,MACT,IPuDwB,uBOtDlB,OAAOD,EAAOoC,aACpB,QACM,OAAOrC,ICcV0C,EAXKC,YAAgB,CAC9B5C,UACAoB,iBACAC,YACAK,mBACAU,aACAG,gBACAC,UACAE,mBCVSG,EAFDC,YAAYH,EAAaI,YAAgBC,M,uBCkB1CC,GA1BMC,QAAQC,IAAIC,KAAKF,SAClBA,QAAQG,KAAKD,KAAKF,SAClBA,QAAQI,QAAQF,KAAKF,SAwBJ,SAACK,EAAOC,GAGrC,IADA,IAAI3B,EAAK0B,EAAM3C,OACRiB,KACD2B,EAAYD,EAAM1B,GAAKA,KA4EtB4B,EAAO,SAACC,GACf,GAAIA,EAAID,KACF,OAAOC,EAAID,OAEXC,EAAIC,QAAQ,aAAc,KZ1GlCC,EAAQ,GAGCC,EAAQ,SAACC,GAChB/D,EAAagE,aAAY,WACnBd,EAAoBW,GAAO,SAACI,EAAMnC,GAC5BmC,SAETF,IAUIG,EAAO,WACdC,cAAcnE,GACd6D,EAAQ,M,YabCO,MARf,SAAmBC,GACb,OACM,yBAAKC,UAAU,aACRD,EAAME,W,OCNrBC,G,MAAQ,IACNC,EAAS,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAclBC,EAAU,SAACC,EAAGhE,GACrB6D,EAAM7D,GAAKiE,SAASD,GACpB,IAAME,EAdI,WAEV,IADA,IAAIlE,EAAI,EACDA,KACD,GAAI6D,EAAM7D,KAAO8D,EAAO9D,GAClB,OAAO,EAGnB,OAAO,EAOcmE,GAErB,OADAD,IALAL,EAAM3D,OAAS,GAMRgE,GC+BEE,mBA5Cf,SAAcV,GAAQ,IACRW,EAAiBX,EAAjBW,IAAKC,EAAYZ,EAAZY,QADE,EAGWC,mBAAS,IAHpB,mBAGR5E,EAHQ,KAGD6E,EAHC,KAITC,EAAUC,iBAAO,MA8BvB,OA7BAC,qBAAU,WAEChF,GAAiB,IAAR0E,GACRO,YAAW,WACLH,EAAQI,QAAQC,UACnB,QAyBT,2BACMnB,UAAU,OACVlE,KAAK,OACLE,MAAOA,EACPoF,SAzBS,SAACC,GAChB,IAAIC,EAAaD,EAAEjD,OAAOpC,MAG1B,GAFY,UAEJuF,KAAKD,GAAa,CACpBT,EAASS,GACLlB,EAAQkB,EAAYZ,IAClBC,EAAQa,KAAK,WAEnB,IAAMC,EAAUX,EAAQI,QAAQQ,mBAC9BD,GAAWA,EAAQN,aAEpB,IAAKG,EAAY,CAClBT,EAAS,IACTT,OAAQuB,EAAWjB,GACnB,IAAMkB,EAAUd,EAAQI,QAAQW,uBAC9BD,GAAWA,EAAQE,WAUrBC,IAAKjB,OClBRkB,MAtBf,SAAkBjC,GAQZ,OAPAiB,qBAAU,WAEJ,OADAiB,SAASC,MAAQ,kBACV,eAGV,IAGG,yBAAKlC,UAAU,YACT,kBAAC,EAAD,KACM,kBAAC,EAAD,CAAMU,IAAK,IACX,kBAAC,EAAD,CAAMA,IAAK,IACX,kBAAC,EAAD,CAAMA,IAAK,IACX,kBAAC,EAAD,CAAMA,IAAK,IACX,kBAAC,EAAD,CAAMA,IAAK,IACX,kBAAC,EAAD,CAAMA,IAAK,OCZpByB,G,kBAPG,SAACpC,GACb,OACM,yBAAKC,UAAU,aACT,yBAAKA,UAAU,mBC4BlBoC,G,MAAAA,aATS,SAACxG,EAAOyG,GAAR,MAAsB,CACxCC,oBAAuC,yBAAlB1G,EAAMuC,QAC3BoE,mBAAsC,qCAAlB3G,EAAMuC,YAGL,SAACqE,EAAUH,GAAX,MAAyB,KAIrCD,EA7BD,SAACrC,GAAW,IACZuC,EAA4CvC,EAA5CuC,oBAAqBC,EAAuBxC,EAAvBwC,mBAEvBE,EAAcC,uBACd,SAACrB,MAID,IAGFrB,EAAY,QAIhB,OAHAsC,IAAwBtC,GAAa,oBACrCuC,IAAuBvC,GAAa,qCAG9B,2BAAOA,UAAWA,EAAWlE,KAAK,OAAO6G,QAASF,QCqCjDG,G,MAAwB,SAAC7F,GAChC,OAAO,SAACyF,GACFA,EAASK,KACTL,EAASM,EAAc/F,OAyDtBgG,EAAa,SAAChH,GACrB,MAAO,CACDD,KjBlHe,ciBmHfC,QAGCiH,EAAY,SAACjH,GACpB,MAAO,CACDD,KjBzHc,aiB0HdC,QAGC+G,EAAgB,SAACnH,GACxB,MAAO,CACDG,KjB7HmB,kBiB8HnBH,YAGCsH,EAAkB,SAACtH,GAC1B,MAAO,CACDG,KjBlIqB,oBiBmIrBH,YAGCuH,EAAgB,SAACvH,GACxB,MAAO,CACDG,KjBvImB,kBiBwInBH,YAQCwH,EAAkB,SAACpH,GAC1B,MAAO,CACDD,KjB5IsB,qBiB6ItBC,QAGCqH,EAAqB,SAACrH,GAC7B,MAAO,CACDD,KjBjJyB,wBiBkJzBC,QAGC8G,EAAkB,WACzB,MAAO,CACD/G,KjBtJqB,sBiByJpBuH,EAAuB,SAAC1H,GAC/B,MAAO,CACDG,KjB1J4B,2BiB2J5BH,YAcC2H,EAAc,SAACrG,GACtB,MAAO,CACDnB,KjBpKgB,eiBqKhBmB,UAGCsG,EAAe,SAACtG,GACvB,MAAO,CACDnB,KjBzKiB,gBiB0KjBmB,UAGCuG,EAAkB,SAACnG,GAC1B,MAAO,CACDvB,KjB9KqB,oBiB+KrBuB,qBAGCoG,EAAoB,SAACzG,GAC5B,MAAO,CACDlB,KjBnLuB,sBiBoLvBkB,cAGC0G,EAAkB,SAAC1G,GAC1B,MAAO,CACDlB,KjBxLqB,oBiByLrBkB,cAQC2G,EAAoB,SAAC1G,GAC5B,MAAO,CACDnB,KjB7LwB,uBiB8LxBmB,UAGC2G,GAAuB,SAAC3G,GAC/B,MAAO,CACDnB,KjBlM2B,0BiBmM3BmB,UAGC4G,GAAoB,WAC3B,MAAO,CACD/H,KjBvMuB,wBiB2MtBgI,GAAqB,SAAC9G,GAC7B,MAAO,CACDlB,KjB5MwB,uBiB6MxBkB,cAaC+G,GAAyB,SAAC9F,GACjC,MAAO,CACDnC,KjBtN6B,4BiBuN7BmC,iBAOC+F,GAAwB,SAAC/G,GAChC,MAAO,CACDnB,KjB3N4B,2BiB4N5BmB,UAYCgH,GAAa,SAAC7F,GACrB,MAAO,CACDtC,KjBpOgB,eiBqOhBsC,WC5RC8F,GAAc,WACrB,OAAOjC,SAASkC,cAAc,WCSrBC,GAVW,SAACC,EAAqBC,EAAqBlG,GAQ/D,MAAO,CAPkB,SAACiD,GACpBgD,EAAoBjG,IAED,SAACiD,GACpBiD,OC0CGlC,gBAZS,SAACxG,EAAOyG,GAAR,MAAsB,MAGnB,SAACG,EAAUH,GAAX,MAAyB,CAC9CkC,oBAAqB,SAACnG,GAChBoE,EAASyB,GAAW7F,KAE1BoG,uBAAwB,WAClBhC,EHqPC,CACD1G,KjBzOmB,wBoBThBsG,EAtCD,SAACrC,GAAW,IACZwE,EAAgDxE,EAAhDwE,oBAAqBC,EAA2BzE,EAA3ByE,uBAEvBC,EAAc/B,uBAAY,SAACrB,GAC3B,IAAMqD,EAAMR,KAEZQ,EAAI1I,MAAQ,GACZ0I,EAAIvD,UACP,IARgB,EAU0BiD,GACvCG,EACAC,EACA,wBAba,mBAUZG,EAVY,KAUMC,EAVN,KAenB,OACM,yBAAK5E,UAAU,QACT6E,QAASJ,EACTK,aAAcH,EACdI,aAAcH,GACd,yBAAK5E,UAAU,WACf,yBAAKA,UAAU,e,kBC9BpBgF,GAAwB,SAAC3F,GAChC,IAAI4F,EAAWhD,SAASiD,cAAc,YACtCD,EAASE,MAAMC,SAAW,QAC1BH,EAASE,MAAME,IAAM,EACrBJ,EAASE,MAAMG,KAAO,EACtBL,EAASE,MAAMI,MAAQ,MACvBN,EAASE,MAAMK,OAAS,MACxBP,EAASE,MAAMM,QAAU,EACzBR,EAASE,MAAMO,OAAS,OACxBT,EAASE,MAAMQ,QAAU,OACzBV,EAASE,MAAMS,UAAY,OAC3BX,EAASE,MAAMU,WAAa,cAC5BZ,EAASjJ,MAAQqD,EACjB4C,SAAS6D,KAAKC,YAAYd,GAC1BA,EAASnD,SACT,IACMG,SAAS+D,YAAY,QACzB,MAAOC,GACH,GAAKC,WAAW,uCAAyCD,EAAIE,YAEnElE,SAAS6D,KAAKM,YAAYnB,ICIjBoB,GAjBF,SAACtG,GACR,IAAM0E,EAAc/B,uBAAY,SAACrB,GAC3B,IAAMqD,EAAMR,KAENoC,EAAclH,EAAKsF,EAAI1I,OAC7BgJ,GAAsBsB,GAEtB5B,EAAI1I,MAAQsK,EACZ5B,EAAI5C,WACP,IACH,OACM,yBAAK9B,UAAU,OAAO6E,QAASJ,GACzB,yBAAKzE,UAAU,UACf,yBAAKA,UAAU,cCJlBuG,I,YAbQ,SAACxG,GAAW,IACrByG,EAAsCzG,EAAtCyG,YAAaC,EAAyB1G,EAAzB0G,QACfzG,EAAYwG,EAAc,kBAAoBA,EAAc,iBAI5DE,EALwC3G,EAAhB4G,YAKY,sBAAwB,aAClE,OACM,yBAAK3G,UAAWA,EAAW6E,QALb,SAACxD,GACfoF,GAAWA,MAKL,yBAAKzG,UAAW0G,OCCnBE,I,MAVD,SAAC7G,GAAW,IACZyG,EAAgBzG,EAAhByG,YACFxG,EAAYwG,EAAc,SAAWA,EAAc,QACzD,OACM,yBAAKxG,UAAWA,GACV,yBAAKA,UAAU,aACf,yBAAKA,UAAU,kBCWlB6G,I,MAjBG,SAAC9G,GAAW,IAElB0G,EAGF1G,EAHE0G,QACAK,EAEF/G,EAFE+G,kBACAC,EACFhH,EADEgH,kBAEN,OACM,yBACM/G,UAAU,YACV8E,aAAcgC,EACd/B,aAAcgC,EACdlC,QAAS4B,GACT,yBAAKzG,UAAU,aACf,yBAAKA,UAAU,kBCmDlBoC,gBAlBS,SAACxG,EAAOyG,GAAR,MAAsB,CACxCtF,eAAgBnB,EAAMmB,mBAGD,SAACyF,EAAUH,GAAX,MAAyB,CAC9C2E,kBAAmB,SAAC9J,EAAYH,GAG1ByF,ET2HY,SAACtF,EAAYH,GAC/B,MAAO,CACDjB,KjB9Ja,YiB+JboB,aACAH,kBS/HSkK,CAAS/J,EAAYH,KAEpCwH,oBAAqB,SAACnG,GAChBoE,EAASyB,GAAW7F,KAE1BoG,uBAAwB,WAClBhC,ETiOC,CACD1G,KjBzOmB,wB0BWhBsG,EArDH,SAACrC,GAAW,IAEZiH,EAIFjH,EAJEiH,kBACAjK,EAGFgD,EAHEhD,eACAwH,EAEFxE,EAFEwE,oBACAC,EACFzE,EADEyE,uBALW,EAmB8BJ,GACzCG,EACAC,EACA,gBAtBW,mBAmBVsC,EAnBU,KAmBSC,EAnBT,KAuBjB,OACM,yBAAK/G,UAAU,OACT,kBAAC,GAAD,CAAgBwG,YAAY,WAC5B,kBAAC,GAAD,CACMM,kBAAmBA,EACnBC,kBAAmBA,EACnBN,QArBE,SAACpF,GACf,IAAMqD,EAAMR,KACNhH,EAAakC,EAAKsF,EAAI1I,OAExBkB,IACE8J,EAAkB9J,EAAYH,GAE9B2H,EAAI1I,MAAQ,GACZ0I,EAAIvD,YAcJ,kBAAC,GAAD,CAAOqF,YAAY,eCiBtBpE,I,MAAAA,aAhBS,SAACxG,EAAOyG,GAAR,MAAsB,MAInB,SAACG,EAAUH,GAAX,MAAyB,CAC9C6E,gBAAiB,SAAClL,GACZwG,EV6DU,SAACxG,GACjB,MAAO,CACDF,KjB9GW,UiB+GXE,SUhESmL,CAAOnL,KAEtBuI,oBAAqB,SAACnG,GAChBoE,EAASyB,GAAW7F,KAE1BoG,uBAAwB,WAClBhC,EVuOC,CACD1G,KjBzOmB,wB2BKhBsG,EAhDA,SAACrC,GAAW,IAEfmH,EAGFnH,EAHEmH,gBACA3C,EAEFxE,EAFEwE,oBACAC,EACFzE,EADEyE,uBAGAC,EAAc/B,uBAAY,SAACrB,GAC3B,IAAMqD,EAAMR,KACN5C,EAAalC,EAAKsF,EAAI1I,OACxBsF,IACE4F,EAAgB5F,GAChBoD,EAAI1I,MAAQ,GACZ0I,EAAIvD,WAEb,CAAC+F,IAfgB,EAiB2B9C,GACzCG,EACAC,EACA,oBApBc,mBAiBbsC,EAjBa,KAiBMC,EAjBN,KAqBpB,OACM,yBAAK/G,UAAU,UACT,kBAAC,GAAD,CACM8G,kBAAmBA,EACnBC,kBAAmBA,EACnBN,QAAShC,IACf,kBAAC,GAAD,CAAO+B,YAAY,gBCvBtBY,I,YAdM,SAACrH,GAAW,IACnBsH,EAAkGtH,EAAlGsH,aAAcpH,EAAoFF,EAApFE,SAAU6G,EAA0E/G,EAA1E+G,kBAAmBC,EAAuDhH,EAAvDgH,kBAAmBO,EAAoCvH,EAApCuH,mBAClEtH,EAAY,eAMhB,OAP0GD,EAAhBwH,YAGpFvH,GAAa,cAEbA,EAAYsH,EAAqB,iCAAmC,+BAGpE,yBAAKtH,UAAWA,EAAW6E,QAASwC,EAAcvC,aAAcgC,EAAmB/B,aAAcgC,GAC1F9G,KCqEJuH,GA9EmB,SAACC,EAAYC,EAAsBC,EAAwBL,GA2EvF,OA1E0B,SAACjG,GAErB,IAAMqD,EAAOR,KACP0D,EAAqBlD,EAAI1I,MAAM6L,cACrCnD,EAAI5C,SAEJ,IAAIgG,GAAiB,EACfC,GAAmB,EASzB,GAPIH,IACEE,GAAiB,GAEnBJ,EAAqBnL,OAAS,IAC5BwL,GAAmB,GAGrBD,GAAkBC,EAAkB,CAElC,IAAMC,EAAeP,EAAWrL,QAAO,SAACa,EAAOZ,EAAGC,GAC5C,IAAI2L,EACAC,EACEC,EAAsBlL,EAAME,OAMlC,GAJI2K,IACEG,EAAiBhL,EAAMA,MAAM4K,cAAchL,QAAQ+K,IAAuB,GAG5EG,EAAkB,CAChBG,GAAyB,EAEzB,IADA,IAAI1K,EAAKkK,EAAqBnL,OACvBiB,KAAM,CAMP,IALA,IAAM4K,EAAeV,EAAqBlK,GAAIvB,GAG1CoM,EAAKpL,EAAMtB,QAAQY,OACnB+L,GAAqC,EAClCD,KACD,GAAIpL,EAAMtB,QAAQ0M,GAAIpM,KAAOmM,EAAc,CACrCE,GAAqC,EACrC,MAGZ,IAAKA,EAAoC,CACnCJ,GAAyB,EACzB,QAKlB,IAAIK,GAAS,EAgBb,OAdIT,GAAkBC,EAChBQ,EAASN,GAAkBC,EACtBJ,EACLS,EAASN,EACJF,IACLQ,EAASL,GAITK,EADFjB,EACWiB,IAAWJ,EAEXI,GAAUJ,KAM3BH,EAAazL,OAAS,GACpBoL,EAAuBK,MC1BhC5F,gBAjBS,SAACxG,EAAOyG,GAAR,MAAsB,CACxCrF,UAAWpB,EAAMoB,UACjBD,eAAgBnB,EAAMmB,mBAGD,SAACyF,EAAUH,GAAX,MAAyB,CAC9CmG,gCAAiC,SAACC,Gb+CE,IAACzL,Ea9C/BwF,Gb8C+BxF,Ea9CKyL,Eb+CnC,SAACjG,GACFA,EAASkB,EAAgB1G,IACzBwF,EAASsB,GAAmB9G,Qa/ClCuH,oBAAqB,SAACnG,GAChBoE,EAASyB,GAAW7F,KAE1BoG,uBAAwB,WAClBhC,EboPC,CACD1G,KjBzOmB,wB8BRhBsG,EApCA,SAACrC,GAAW,IACb/C,EAAgI+C,EAAhI/C,UAAWD,EAAqHgD,EAArHhD,eAAgByL,EAAqGzI,EAArGyI,gCAAiClB,EAAoEvH,EAApEuH,mBAAoB/C,EAAgDxE,EAAhDwE,oBAAqBC,EAA2BzE,EAA3ByE,uBACvGkE,EAAoBlB,GAA0BxK,EAAWD,EAAgByL,EAAiClB,GAF5F,EAI2BlD,GAAkBG,EAAqBC,EADhE8C,EAAqB,6BAA+B,4BAHtD,mBAIbR,EAJa,KAIMC,EAJN,KAKpB,OACM,yBAAK/G,UAAU,UACT,kBAAC,GAAD,CACMsH,mBAAoBA,EACpBR,kBAAmBA,EACnBC,kBAAmBA,EACnBM,aAAcqB,GACd,kBAAC,GAAD,CAAgBlC,YAAY,YAAYG,aAAcW,KAE5D,yBAAKtH,UAAU,cCAlB2I,I,MAtBiB,SAAClB,EAAYE,GAmBvC,OAlB0B,SAACtG,GAErB,IAAMqD,EAAMR,KACN0D,EAAqBlD,EAAI1I,MAAM6L,cAIrC,GAHAnD,EAAI5C,SAGA8F,EAAoB,CAClB,IAAMI,EAAeP,EAAWrL,QAAO,SAACL,EAAKM,EAAGC,GAC1C,OAAOP,EAAIA,IAAI8L,cAAchL,QAAQ+K,IAAuB,KAG9DI,EAAazL,OAAS,GACpBoL,EAAuBK,OC2BhC5F,gBAhBS,SAACxG,EAAOyG,GAAR,MAAsB,CACxC1G,QAASC,EAAMD,YAGM,SAAC6G,EAAUH,GAAX,MAAyB,CAC9CsF,uBAAwB,SAACiB,Gf4CS,IAACjN,Ee3C7B6G,Gf2C6B7G,Ee3CKiN,Ef4CjC,SAACpG,GACFA,EAASU,EAAcvH,IACvB6G,EAASa,EAAqB1H,Qe5CpC4I,oBAAqB,SAACnG,GAChBoE,EAASyB,GAAW7F,KAE1BoG,uBAAwB,WAClBhC,EfuPC,CACD1G,KjBzOmB,wBgCXhBsG,EAlCG,SAACrC,GAAW,IAChBpE,EAAiFoE,EAAjFpE,QAASgM,EAAwE5H,EAAxE4H,uBAAwBpD,EAAgDxE,EAAhDwE,oBAAqBC,EAA2BzE,EAA3ByE,uBACxDqE,EAAuBF,GAAwBhN,EAASgM,GAFvC,EAGwBvD,GAAkBG,EAAqBC,EAAwB,uBAHvF,mBAGhBsC,EAHgB,KAGGC,EAHH,KAIvB,OACM,yBAAK/G,UAAU,aACT,kBAAC,GAAD,CACMuH,aAAa,EACbT,kBAAmBA,EACnBC,kBAAmBA,EACnBM,aAAcwB,GACd,kBAAC,GAAD,CAAOrC,YAAY,eAEzB,yBAAKxG,UAAU,c,2BCtB3B8I,GAAMC,KAASC,IAAIC,KAAKC,MAAM,UAC9BC,GAAKJ,KAASC,IAAIC,KAAKC,MAAM,oBCOnC,IAyCe9G,gBAdS,SAACxG,EAAOyG,GAAR,MAAsB,CACxC1G,QAASC,EAAMD,QACfqB,UAAWpB,EAAMoB,cAGI,SAACwF,EAAUH,GAAX,MAAyB,CAC9CkC,oBAAqB,SAACnG,GAChBoE,EAASyB,GAAW7F,KAE1BoG,uBAAwB,WAClBhC,EjBiPC,CACD1G,KjBzOmB,wBkCLhBsG,EAzCG,SAACrC,GAAU,IAEfpE,EAAoEoE,EAApEpE,QAASqB,EAA2D+C,EAA3D/C,UAAWuH,EAAgDxE,EAAhDwE,oBAAqBC,EAA2BzE,EAA3ByE,uBAF1B,EAcwBJ,GAAkBG,EAAqBC,EAAwB,sBAdvF,mBAchBsC,EAdgB,KAcGC,EAdH,KAgBvB,OACM,yBACM/G,UAAU,YACV8E,aAAcgC,EACd/B,aAAcgC,EACdlC,QAjBQ,SAACxD,GAEf,IDXY+H,ECWNC,GDXMD,ECWSE,KAAKC,UAAU,CAC9B5N,UACAqB,cDZL+L,KAASS,IAAIC,QAAQL,EAAML,KAASC,IAAIC,KAAKC,MAAMJ,IAAM,CAC1DK,GAAIJ,KAASC,IAAIC,KAAKC,MAAMC,IAC5BO,KAAMX,KAASW,KAAKC,IACpBlE,QAASsD,KAASa,IAAIC,QACzB1D,YCWGnB,GAAsBqE,KAWhB,yBAAKrJ,UAAU,eACf,yBAAKA,UAAU,qBC6BlBoC,I,MAAAA,aAhBS,SAACxG,EAAOyG,GAAR,MAAsB,MAInB,SAACG,EAAUH,GAAX,MAAyB,CAC9CyH,6BAA8B,SAACnO,EAASqB,GAClCwF,ElBsC6B,SAAC7G,EAASqB,GAC7C,OAAO,SAACwF,GACFA,EAASa,EAAqB1H,IAC9B6G,EAASsB,GAAmB9G,KkBzCnB+M,CAA0BpO,EAASqB,KAElDuH,oBAAqB,SAACnG,GAChBoE,EAASyB,GAAW7F,KAE1BoG,uBAAwB,WAClBhC,ElBsOC,CACD1G,KjBzOmB,wBmCMhBsG,EApDA,SAACrC,GAAW,IACb+J,EAA8E/J,EAA9E+J,6BAA8BvF,EAAgDxE,EAAhDwE,oBAAqBC,EAA2BzE,EAA3ByE,uBADvC,EAsB2BJ,GAAkBG,EAAqBC,EAAwB,mBAtB1F,mBAsBbsC,EAtBa,KAsBMC,EAtBN,KAwBpB,OACM,yBACM/G,UAAU,SACV8E,aAAcgC,EACd/B,aAAcgC,EACdlC,QA1BQ,SAACxD,GAEf,IACI2I,EFHQZ,EEENa,EAAc7K,EAAK8E,KAAclI,OAEvC,GAAIiO,EAAa,CACX,IAAMC,GFLAd,EEKoBa,EFJtBlB,KAASS,IAAIW,QAAQf,EAAML,KAASC,IAAIC,KAAKC,MAAMJ,IAAM,CACnEK,GAAIJ,KAASC,IAAIC,KAAKC,MAAMC,IAC5BO,KAAMX,KAASW,KAAKC,IACpBlE,QAASsD,KAASa,IAAIC,QAEX1D,SAAS4C,KAASC,IAAIC,OEA3B,IACMe,EAAaV,KAAKJ,MAAMgB,GAC5B,MAAOjE,GACHpH,QAAQC,IAAI,MAAOmH,IAG/B,GAAI+D,EAAY,CAAC,IAAD,EACqBA,EAAvBrO,EADE,EACFA,QAASqB,EADP,EACOA,UACXoN,EAAUC,MAAMD,QAEtBzO,GAAWyO,EAAQzO,IAAYqB,GAAaoN,EAAQpN,IAAc8M,EAA6BnO,EAASqB,MAWxG,yBAAKgD,UAAU,aACf,yBAAKA,UAAU,oBCAlBoC,I,YAAAA,aAbS,SAACxG,EAAOyG,GAAR,MAAsB,MAInB,SAACG,EAAUH,GAAX,MAAyB,CAC9CkC,oBAAqB,SAACnG,GAChBoE,EAASyB,GAAW7F,KAE1BoG,uBAAwB,WAClBhC,EnB2PC,CACD1G,KjBzOmB,wBoCfhBsG,EAhCS,SAACrC,GAAW,IACtBwE,EAAgDxE,EAAhDwE,oBAAqBC,EAA2BzE,EAA3ByE,uBADA,EAOkBJ,GAAkBG,EAAqBC,EAAwB,oCAPjF,mBAOtBsC,EAPsB,KAOHC,EAPG,KAQ7B,OACM,yBACM/G,UAAU,kBACV8E,aAAcgC,EACd/B,aAAcgC,EACdlC,QAXQ,SAACxD,GACf,IAAMqD,EAAMR,KACZQ,EAAI1I,MAAQ0I,EAAI1I,MAAQ,KACxB0I,EAAIvD,UASG,WCXJmJ,GAPQ,SAACvK,GAClB,OACM,yBAAKC,UAAU,kBACT,kBAAC,GAAD,QCuClB,IASeoC,gBATS,SAACxG,EAAOyG,GAAR,MAAsB,CACxCkI,kBAAqC,uBAAlB3O,EAAMuC,QACzBqM,SAAU5O,EAAMyC,mBAGK,SAACmE,EAAUH,GAAX,MAAyB,KAIrCD,EAtCf,SAAuBrC,GAAQ,IACjBwK,EAAgCxK,EAAhCwK,kBAAmBC,EAAazK,EAAbyK,SAEvBxK,EAAY,gBAGhB,OAFCuK,GAAqBC,KAAcxK,GAAa,WAG3C,yBAAKA,UAAWA,GACV,6BACM,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,OAEN,6BACM,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,CAAQsH,oBAAoB,IAC5B,kBAAC,GAAD,CAAQA,oBAAoB,IAC5B,kBAAC,GAAD,OAEN,6BACM,kBAAC,GAAD,MACA,kBAAC,GAAD,WC/BTmD,I,wBARE,SAAC1K,GACZ,OACM,yBAAKC,UAAU,YACT,yBAAKA,UAAU,eACf,yBAAKA,UAAU,gBCalB0K,GAfH,SAAC3K,GAAW,IACVhE,EAAiBgE,EAAjBhE,IAAK0K,EAAY1G,EAAZ0G,QACPhC,EAAc/B,uBAAY,SAACrB,GAC3BoF,EAAQ1K,KACX,CAAC0K,EAAS1K,IAEb,OACM,yBAAKiE,UAAU,MAAM6E,QAASJ,GACxB,kBAAC,GAAD,MACA,8BACO1I,EAAIA,OCFd4O,I,MAVG,SAAC5K,GAAW,IAChB6K,EAAsC7K,EAAtC6K,eAAgBC,EAAsB9K,EAAtB8K,kBAExB,OACM,yBAAK7K,UAAU,aACT,yBAAKA,UAAU,WAAW6E,QAAS+F,IACnC,yBAAK5K,UAAU,OAAO6E,QAASgG,OCOpCC,GAAsB,SAACC,EAAYC,GAC1C,OAAOD,EAAa,GAAKA,GAAcC,GCuB9BC,GA7BM,SAACxD,GAAgB,IAAD,EACP7G,mBAAS,GADF,mBACxBsK,EADwB,KAClBC,EADkB,KAIzBH,EDVoB,SAACI,EAASC,GACpC,IAAIL,EAAUM,KAAKC,KAAKH,EAAQ7O,OAAS8O,GAIzC,OAHAL,EAAsB,IAAZA,EACJ,EACAA,ECMUQ,CAAiB/D,EADT,IAElBgE,EDQiB,SAACL,EAASM,EAAQL,GACzC,IAAMM,EAAMD,EAASL,EACf7L,EAAQmM,EAAMN,EAEpB,OAAOD,EAAQQ,MAAMpM,EAAOmM,GCZLE,CAAcpE,EAAYyD,EAFzB,IAIxBlK,qBAAU,WAIJ,OAHIkK,EAAOF,GACLG,EAAQH,GAEP,eAGV,CAACE,EAAMF,IAYV,MAAO,CAACS,EAVe,SAACpK,GAClB,IAAMyK,EAAaZ,EAAO,EAC1BJ,GAAoBgB,EAAYd,IAAYG,EAAQW,IAEhC,SAACzK,GACrB,IAAMyK,EAAaZ,EAAO,EAC1BJ,GAAoBgB,EAAYd,IAAYG,EAAQW,MCkBjD1J,gBAhBS,SAACxG,EAAOyG,GAAR,MAAsB,CACxC1G,QAASC,EAAMD,QACfoQ,gBAAmC,qBAAlBnQ,EAAMuC,QACvB6N,mBAAsC,wBAAlBpQ,EAAMuC,QAC1B8N,mBAAsC,uBAAlBrQ,EAAMuC,QAC1B+N,gBAAmC,oBAAlBtQ,EAAMuC,QACvBgO,cAAiC,mBAAlBvQ,EAAMuC,QACrBiO,mBAAsC,wBAAlBxQ,EAAMuC,YAGL,SAACqE,EAAUH,GAAX,MAAyB,CAC9CgK,0BAA2B,SAACtQ,GACtByG,E3BboB,SAACzG,GAC3B,OAAO,SAACyG,GACFA,EAASQ,EAAUjH,IACnByG,EAASW,EAAgBpH,K2BUhBuQ,CAAiBvQ,QAIvBqG,EAzCC,SAACrC,GAAW,IACdpE,EAAoJoE,EAApJpE,QAAS0Q,EAA2ItM,EAA3IsM,0BAA2BN,EAAgHhM,EAAhHgM,gBAAiBC,EAA+FjM,EAA/FiM,mBAAoBC,EAA2ElM,EAA3EkM,mBAAoBC,EAAuDnM,EAAvDmM,gBAAiBC,EAAsCpM,EAAtCoM,cAAeC,EAAuBrM,EAAvBqM,mBADhH,EAEuCnB,GAAatP,GAFpD,mBAEd8P,EAFc,KAEEb,EAFF,KAEkBC,EAFlB,KAIjB7K,EAAY,UAMhB,OALAgM,IAAuBhM,EAAY,gCACnCiM,IAAuBjM,EAAY,8BACnCkM,IAAoBlM,EAAY,2BAChCoM,IAAuBpM,EAAY,4BAG7B,yBAAKA,UAAWA,GACV,yBAAKmF,MAAO,CAAEC,SAAU,aAClB,yBAAKpF,UAAW+L,EAAkB,kBAAoB,eACtD,yBAAK/L,UAAWmM,EAAgB,mBAAqB,gBACrD,yBAAKnM,UAAU,mBACT,yBAAKA,UAAWoM,EAAqB,4BAA8B,yBAClEX,EAAehP,KAAI,SAACV,EAAKM,EAAGC,GAAT,OAAkB,kBAAC,GAAD,CAAKP,IAAKA,EAAK+M,IAAK/M,EAAIE,GAAIwK,QAAS4F,SAGvF,kBAAC,GAAD,CAAWzB,eAAgBA,EAAgBC,kBAAmBA,QCPjE0B,I,kBApBA,SAACxM,GAAW,IACb0G,EAAsC1G,EAAtC0G,QAAS+F,EAA6BzM,EAA7ByM,YAAaC,EAAgB1M,EAAhB0M,YAU9B,OACM,yBACMzM,UAAU,SACV8E,aATS,SAACzD,GAChBmL,GAAeA,KASTzH,aAPS,SAAC1D,GAChBoL,GAAeA,KAOT5H,QAdQ,SAACxD,GACfoF,GAAWA,SCkBRiG,I,OArBO,SAAC3M,GAAW,IACpB0G,EAAsC1G,EAAtC0G,QAAS+F,EAA6BzM,EAA7ByM,YAAaC,EAAgB1M,EAAhB0M,YAW9B,OACM,yBACMzM,UAAU,gBACV8E,aAVS,SAACzD,GAChBmL,GAAeA,KAUTzH,aARS,SAAC1D,GAChBoL,GAAeA,KAQT5H,QAfQ,SAACxD,GACfoF,GAAWA,SCwBRkG,GAxBQ,SAAC5M,GAAW,IAEvB6M,EAMF7M,EANE6M,cACAC,EAKF9M,EALE8M,cACAC,EAIF/M,EAJE+M,kBACAC,EAGFhN,EAHEgN,kBACAC,EAEFjN,EAFEiN,yBACAC,EACFlN,EADEkN,yBAGN,OACM,yBAAKjN,UAAU,kBACT,kBAAC,GAAD,CACMyG,QAASoG,EACTL,YAAaM,EACbL,YAAaM,IAEnB,kBAAC,GAAD,CACMP,YAAaQ,EACbP,YAAaQ,EACbxG,QAASmG,MCpBlBM,GANiB,SAACC,EAAWC,GAItC,OAHsB,WAChBD,EAAUC,KCETC,GAA4B,WAAO,IAAD,EACCzM,oBAAS,GADV,mBAClC0M,EADkC,KACnBC,EADmB,KAUzC,MAAO,CAACD,EAPkB,WACpBC,GAAiB,IAEG,WACpBA,GAAiB,MCPhBC,GAAmC,WAAO,IAAD,EACQ5M,oBAAS,GADjB,mBACzC6M,EADyC,KACnBC,EADmB,KAUhD,MAAO,CAACD,EAPyB,WAC3BC,GAAwB,IAEG,WAC3BA,GAAwB,MC+DrBtL,gBAnBS,SAACxG,EAAOyG,GAAR,MAAsB,CACxCtF,eAAgBnB,EAAMmB,eACtBkP,mBAAsC,uBAAlBrQ,EAAMuC,QAC1B+N,gBAAmC,oBAAlBtQ,EAAMuC,QACvBiO,mBAAsC,wBAAlBxQ,EAAMuC,YAGL,SAACqE,EAAUH,GAAX,MAAyB,CAC9CsL,uBAAwB,SAAC5R,GACnByG,ElClBiB,SAACzG,GACxB,OAAO,SAACyG,GACFA,EAASO,EAAWhH,IACpByG,EAASY,EAAmBrH,KkCenB6R,CAAc7R,KAE7B8R,4BAA6B,SAAC9Q,GACxByF,EAASI,EAAsB7F,KAErC+Q,uBAAwB,WAClBtL,EAASK,SAINT,EA5DI,SAACrC,GAAW,IACjBhD,EAOJgD,EAPIhD,eACF4Q,EAMF5N,EANE4N,uBACAE,EAKF9N,EALE8N,4BACAC,EAIF/N,EAJE+N,uBACA7B,EAGFlM,EAHEkM,mBACAC,EAEFnM,EAFEmM,gBACAE,EACFrM,EADEqM,mBAEAS,EAAgBK,GAAwBW,EAA6B9Q,GATnD,EAU+BkO,GAAalO,GAV5C,mBAUjBgR,EAViB,KAUNnD,EAVM,KAUUC,EAVV,KAYpB7K,EAAY,aAChBiM,IAAuBjM,EAAY,iCACnCkM,IAAoBlM,EAAY,+BAChCoM,IAAuBpM,EAAY,mCAfX,MAiBsCqN,KAjBtC,mBAiBjBC,EAjBiB,KAiBFR,EAjBE,KAiBiBC,EAjBjB,OAkB2DS,KAlB3D,mBAkBjBC,EAlBiB,KAkBKT,EAlBL,KAkB+BC,EAlB/B,KAmBpBe,EAAwB,0BAI5B,OAHAV,IAAkBU,GAAyB,oBAC3CP,IAAyBO,GAAyB,4BAG5C,yBAAKhO,UAAWA,GACV,kBAAC,GAAD,CAAW4K,eAAgBA,EAAgBC,kBAAmBA,IAC9D,yBAAK7K,UAAWgO,GACTD,EAAUtR,KAAI,SAACV,EAAKM,EAAGC,GAAT,OAAkB,kBAAC,GAAD,CAAKP,IAAKA,EAAK+M,IAAK/M,EAAIE,GAAIwK,QAASkH,OACtE,yBAAK3N,UAAU,uBAErB,kBAAC,GAAD,CACM6M,cAAeA,EACfC,kBAAmBA,EACnBC,kBAAmBA,EACnBC,yBAA0BA,EAC1BC,yBAA0BA,EAC1BL,cAAekB,QCGxB1L,I,OAAAA,aApBS,SAACxG,EAAOyG,GAAR,MAAsB,CACxCkI,kBAAqC,uBAAlB3O,EAAMuC,QACzB8P,SAAUrS,EAAMyC,mBAGK,SAACmE,EAAUH,GAAX,MAAyB,CAC9CkC,oBAAqB,SAACnG,GAChBoE,EAASyB,GAAW7F,KAE1BoG,uBAAwB,WAClBhC,EnCqPC,CACD1G,KjBzOmB,qBoDXzBoS,2BAA4B,WACtB1L,EAASuB,IAAuB,KAEtCoK,8BAA+B,SAAClQ,GAC1BuE,EnCuPqB,SAACvE,GAC5B,MAAO,CACDnC,KjB7OwB,uBiB8OxBmC,gBmC1PSmQ,CAAkBnQ,QAIxBmE,EA9CE,SAACrC,GAAW,IACfwE,EAAwIxE,EAAxIwE,oBAAqBC,EAAmHzE,EAAnHyE,uBAAwB+F,EAA2FxK,EAA3FwK,kBAAmB2D,EAAwEnO,EAAxEmO,2BAA4BD,EAA4ClO,EAA5CkO,SAAUE,EAAkCpO,EAAlCoO,8BAE1GnO,EAAY,WAChBiO,IAAajO,GAAa,QACzBiO,GAAY1D,IAAsBvK,GAAa,qBAChDiO,GAAY1D,IAAsBvK,GAAa,sBANzB,MAQyBoE,GAAkBG,EAAqBC,EAAwB,sBARxF,mBAQfsC,EARe,KAQIC,EARJ,KAatB,OACM,yBACMjC,aAAcgC,EACd/B,aAAcgC,EACdlC,QARQ,SAACxD,GACf6M,IACAC,GAA+BF,IAOzBjO,UAAWA,GACX,yBAAKA,UAAU,aACf,yBAAKA,UAAU,gBACf,yBAAKA,UAAU,kBCjBlBqO,I,cARG,SAACtO,GAAW,IAChBuO,EAAcvO,EAAduO,UACR,OACM,yBAAKtO,UAAU,aACRsO,KCkBJlM,gBARS,SAACxG,EAAOyG,GAAR,MAAsB,CACxCnE,cAAetC,EAAMsC,kBAGA,SAACsE,EAAUH,GAAX,MAAyB,KAIrCD,EAnBO,SAACrC,GAAW,IACpB7B,EAAkB6B,EAAlB7B,cACR,OACM,yBAAK8B,UAAU,iBACT,6BACO9B,EAAczB,KAAI,SAACV,EAAKM,EAAGC,GAAT,OAAkB,kBAAC,GAAD,CAAWgS,UAAWvS,EAAIA,IAAK+M,IAAK/M,EAAIE,aCkDtFmG,I,cAAAA,aATS,SAACxG,EAAOyG,GAAR,MAAsB,CACxCkM,yBAA4C,+BAAlB3S,EAAMuC,QAChCqQ,uBAA0C,6BAAlB5S,EAAMuC,YAGT,SAACqE,EAAUH,GAAX,MAAyB,KAIrCD,EAtDD,SAACrC,GAAW,IAEd9C,EAQF8C,EARE9C,MACAwJ,EAOF1G,EAPE0G,QACAD,EAMFzG,EANEyG,YACAiI,EAKF1O,EALE0O,cACA3H,EAIF/G,EAJE+G,kBACAC,EAGFhH,EAHEgH,kBACAwH,EAEFxO,EAFEwO,yBACAC,EACFzO,EADEyO,uBAeFxO,EAAYwG,EAAc,SAAWA,EAAc,QAEnC,YAAhBA,IACE+H,IAA6C,IAAjBtR,EAAME,SAAqB6C,GAAa,0BACpEwO,IAA2C,IAAjBvR,EAAME,SAAoB6C,GAAa,2BAGvE,IAAI0O,EAAiBzR,EAAMA,MAAMqC,QAAQ,iBAAiB,SAACqP,EAAOC,GAC5D,MAAM,2BAAN,OAAkCA,EAAlC,cAKN,OAHAF,EAAiBA,EAAepP,QAAQ,gBAAgB,SAACqP,EAAOC,GAC1D,MAAM,sBAAN,OAA6BA,EAA7B,cAGA,yBAAK5O,UAAWA,EAAWkC,MAAOjF,EAAMA,MAAO6H,aArB5B,SAACzD,GACpByF,GAAqBA,EAAkB7J,IAoBwC8H,aAlB5D,SAAC1D,GACpB0F,GAAqBA,EAAkB9J,KAkBjC,kBAAC,GAAD,CAAgBuJ,YAAY,WAAWC,QAzBtB,WACvBgI,GAAiBA,EAAcxR,IAwB6C0J,YAAa1J,EAAME,SACzF,0BAAM0H,QA7BE,SAACxD,GACfoF,GAAWA,EAAQxJ,IA4Be4R,wBAAyB,CAAEC,OAAQJ,UCrClEK,GAVgB,SAACC,EAAgCC,GAQ1D,MAAO,CAPmB,SAAChS,GACrB+R,EAA+B/R,IAEX,SAACA,GACrBgS,EAA4BhS,MC4DzBmF,gBArBS,SAACxG,EAAOyG,GAAR,MAAsB,CACxCrF,UAAWpB,EAAMoB,UACjBkS,kBAAqC,iBAAlBtT,EAAMuC,QACzB8N,mBAAsC,uBAAlBrQ,EAAMuC,QAC1B+N,gBAAmC,oBAAlBtQ,EAAMuC,QACvBgO,cAAiC,mBAAlBvQ,EAAMuC,QACrBiO,mBAAsC,wBAAlBxQ,EAAMuC,YAGL,SAACqE,EAAUH,GAAX,MAAyB,CAC9C8M,4BAA6B,SAAClS,GACxBuF,ExCfsB,SAACvF,GAC7B,OAAO,SAACuF,GACFA,EAASc,EAAYrG,IACrBuF,EAASmB,EAAkB1G,KwCYlBmS,CAAmBnS,KAElC+R,+BAAgC,SAAC/R,GAC3BuF,EAASwB,GAAsB/G,KAErCgS,4BAA6B,SAAChS,GACxBuF,ExCoNC,CACD1G,KjBhOyB,8ByDetBsG,EArDG,SAACrC,GAAW,IAChB/C,EAC4F+C,EAD5F/C,UAAWmS,EACiFpP,EADjFoP,4BAA6BH,EACoDjP,EADpDiP,+BAAgCC,EACoBlP,EADpBkP,4BAC1EC,EAA8FnP,EAA9FmP,kBAAmBjD,EAA2ElM,EAA3EkM,mBAAoBC,EAAuDnM,EAAvDmM,gBAAiBC,EAAsCpM,EAAtCoM,cAAeC,EAAuBrM,EAAvBqM,mBAFtD,EAGqCnB,GAAajO,GAHlD,mBAGhByO,EAHgB,KAGAb,EAHA,KAGgBC,EAHhB,OAIwBkE,GAAuBC,EAAgCC,GAJ/E,mBAIhBnI,EAJgB,KAIGC,EAJH,KAKnB/G,EAAY,YAIhB,OAHAiM,IAAuBjM,EAAY,gCACnCkM,IAAoBlM,EAAY,6BAChCoM,IAAuBpM,EAAY,8BAE7B,yBAAKA,UAAWA,GACV,yBAAKmF,MAAO,CAAEC,SAAU,aAClB,yBAAKpF,UAAWkP,EAAoB,oBAAsB,iBAC1D,yBAAKlP,UAAWmM,EAAgB,mBAAqB,gBACrD,yBAAKnM,UAAU,qBACT,yBAAKA,UAAWoM,EAAqB,4BAA8B,yBAClEX,EAAehP,KAAI,SAACQ,EAAOZ,EAAGC,GAAX,OACd,kBAAC,GAAD,CACMW,MAAOA,EACP6L,IAAK7L,EAAMhB,GACXuK,YAAY,UACZM,kBAAmBA,EACnBC,kBAAmBA,EACnBN,QAAS0I,SAIjC,kBAAC,GAAD,CAAWvE,eAAgBA,EAAgBC,kBAAmBA,QCIjEzI,I,cAAAA,aAdS,SAACxG,EAAOyG,GAAR,MAAsB,CACxCgN,WAAYzT,EAAMyC,eAClBiR,UAAW1T,EAAMyB,iBAAiBd,OAAS,EAC3CyB,KAAMpC,EAAMyB,iBAAiBd,OAAS,GAChCX,EAAMmC,WAAWC,SAIF,SAACwE,EAAUH,GAAX,MAAyB,CAC9CkN,sBAAuB,SAACtR,GAClBuE,EAASuB,GAAuB9F,QAI7BmE,EArCI,SAACrC,GAAW,IACjBuP,EAAuDvP,EAAvDuP,UAAWC,EAA4CxP,EAA5CwP,sBAAuBvR,EAAqB+B,EAArB/B,KAAMqR,EAAetP,EAAfsP,WAShD,OACM,yBACMrP,UAAU,aACVmF,MAAO,CACDqK,gBAAiBF,EACXtR,EAAO,UAAY,UACjB,eAEd6G,QAfQ,SAACxD,IACVgO,GAAcC,GAEbC,GAAuBvR,UCiB1ByR,GAzB2B,SACpCC,EACAC,EACAC,EACA7S,EACA8S,GAiBA,OAbKH,EAKqB,SAACzS,GAEfiH,KAAclI,MAAQiB,EAAMA,MAE5B2S,EAA8B7S,GAC9B8S,EAAwB5S,IATV,SAACA,GACf0S,EAAyB1S,KC2H5BmF,gBApCS,SAACxG,EAAOyG,GAAR,MAAsB,CACxChF,iBAAkBzB,EAAMyB,iBACxBqS,eAAgB9T,EAAMmC,WAAWC,KACjCjB,eAAgBnB,EAAMmB,eACtBkP,mBAAsC,uBAAlBrQ,EAAMuC,QAC1B+N,gBAAmC,oBAAlBtQ,EAAMuC,QACvB2R,iBAAoC,wBAAlBlU,EAAMuC,YAGH,SAACqE,EAAUH,GAAX,MAAyB,CAC9CsN,yBAA0B,SAAC1S,GACrBuF,E3C7DmB,SAACvF,GAC1B,OAAO,SAACuF,GACFA,EAASe,EAAatG,IACtBuF,EAASoB,GAAqB3G,K2C0DrB8S,CAAgB9S,KAE/B4Q,4BAA6B,SAACxQ,GACxBmF,E3CpD2B,SAACnF,GAClC,OAAO,SAACmF,GACFA,EAASqB,MACTrB,EAASgB,EAAgBnG,K2CiDhB2S,CAAwB3S,KAEvCyQ,uBAAwB,WAClBtL,EAASqB,OAEfgM,wBAAyB,SAAC5S,GACpBuF,E3CpDkB,SAACvF,GACzB,OAAO,SAACuF,GACFA,EAASoB,GAAqB3G,IAC9BuF,EAASU,EAAcjG,EAAMtB,UAC7B6G,EAASa,EAAqBpG,EAAMtB,UACpC6G,EAASuB,IAAuB,K2C+CvBkM,CAAehT,KAE9B2S,8BAA+B,SAAC7S,GAC1ByF,EAASI,EAAsB7F,KAErCmT,gDAAiD,SAACjT,GAC5CuF,E3CsH8B,SAACvF,GACrC,MAAO,CACDnB,KjBjNkC,iCiBkNlCmB,S2CzHSkT,CAA2BlT,KAE1C+R,+BAAgC,SAAC/R,GAC3BuF,EAASwB,GAAsB/G,KAErCgS,4BAA6B,SAAChS,GACxBuF,E3C2IC,CACD1G,KjBhOyB,8B4DwFtBsG,EA/GM,SAACrC,GAAW,IAErB1C,EAcF0C,EAdE1C,iBACAsS,EAaF5P,EAbE4P,yBACA9B,EAYF9N,EAZE8N,4BACAC,EAWF/N,EAXE+N,uBACA4B,EAUF3P,EAVE2P,eACAG,EASF9P,EATE8P,wBACA9S,EAQFgD,EAREhD,eACA6S,EAOF7P,EAPE6P,8BACAM,EAMFnQ,EANEmQ,gDACAlB,EAKFjP,EALEiP,+BACAC,EAIFlP,EAJEkP,4BACAhD,EAGFlM,EAHEkM,mBACAC,EAEFnM,EAFEmM,gBACA4D,EACF/P,EADE+P,iBAEAM,EAAoBX,GACpBC,EACAC,EACAC,EACA7S,EACA8S,EACAb,EACAC,EACAa,GAEAjD,EAAgBK,GAAwBW,EAA6BxQ,GA3BjD,EA4B6B4N,GAAa5N,GA5B1C,mBA4BnB0Q,EA5BmB,KA4BRnD,EA5BQ,KA4BQC,EA5BR,OA6BqBkE,GAAuBC,EAAgCC,GA7B5E,mBA6BnBnI,EA7BmB,KA6BAC,EA7BA,KA8BtB/G,EAAY,eAChBiM,IAAuBjM,EAAY,mCACnCkM,IAAoBlM,EAAY,iCAChC8P,IAAqB9P,EAAY,qCAjCP,MAmCoCqN,KAnCpC,mBAmCnBC,EAnCmB,KAmCJR,EAnCI,KAmCeC,EAnCf,OAoCyDS,KApCzD,mBAoCnBC,EApCmB,KAoCGT,EApCH,KAoC6BC,EApC7B,KAqCtBe,EAAwB,oBAI5B,OAHAV,IAAkBU,GAAyB,oBAC3CP,IAAyBO,GAAyB,4BAG5C,yBAAKhO,UAAWA,GACV,yBAAKmF,MAAO,CAAEI,MAAO,SACf,kBAAC,GAAD,CAAWqF,eAAgBA,EAAgBC,kBAAmBA,IAC9D,kBAAC,GAAD,OAEN,yBAAK1F,MAAO,CAAEC,SAAU,WAAYG,MAAO,UACrC,yBAAKvF,UAAWgO,GACTD,EAAUtR,KAAI,SAACQ,EAAOZ,EAAGC,GAAX,OACT,kBAAC,GAAD,CACMW,MAAOA,EACP6L,IAAK7L,EAAMhB,GACXuK,YAAY,kBACZC,QAAS2J,EACTtJ,kBAAmBA,EACnBC,kBAAmBA,EACnB0H,cAAeyB,QAGjC,yBAAKlQ,UAAU,uBAErB,6BACM,kBAAC,GAAD,CACM8M,kBAAmBA,EACnBC,kBAAmBA,EACnBC,yBAA0BA,EAC1BC,yBAA0BA,EAC1BJ,cAAeA,EACfD,cAAekB,SC7D7C,IAQe1L,gBARS,SAACxG,EAAOyG,GAAR,MAAsB,CACxCgO,eAAkC,mBAAlBzU,EAAMuC,YAGD,SAACqE,EAAUH,GAAX,MAAyB,KAIrCD,EA/Bf,SAAgBrC,GAAQ,IACVsQ,EAAmBtQ,EAAnBsQ,eACR,OACM,yBAAKrQ,UAAU,UACT,yBAAKA,UAAWqQ,EAAiB,0BAA4B,uBAC7D,6BACM,kBAAC,GAAD,MACA,kBAAC,GAAD,OAEN,yBAAKlL,MAAO,CAAEI,MAAO,UACf,kBAAC,GAAD,OAEN,6BACM,kBAAC,GAAD,OAEN,6BACM,kBAAC,GAAD,MACA,kBAAC,GAAD,WCTT9E,I,cAAAA,aAfF,SAACV,GAAW,IACXY,EAAYZ,EAAZY,QAMR,OACM,yBAAKX,UAAU,QACT,yBAAKA,UAAU,SAAS6E,QANf,SAACxD,GAChBV,EAAQa,KAAK,gBAMP,yBAAKxB,UAAU,eACf,yBAAKA,UAAU,kBCLlBsQ,I,cARE,SAACvQ,GACZ,OACM,yBAAKC,UAAU,YACT,yBAAKA,UAAU,YACf,yBAAKA,UAAU,oBCiDlBoC,gBAnBS,SAACxG,EAAOyG,GAAR,MAAsB,MAInB,SAACG,EAAUH,GAAX,MAAyB,CAC9CkO,yBAA0B,SAAC5U,GACrB6G,EAASS,EAAgBtH,KAE/B6U,uBAAwB,SAACxT,GACnBwF,EAASiB,EAAkBzG,KAEjCuH,oBAAqB,SAACnG,GAChBoE,EAASyB,GAAW7F,KAE1BoG,uBAAwB,WAClBhC,E/C4OC,CACD1G,KjBzOmB,wBgEAhBsG,EA/CF,SAACrC,GAAW,IAEbwQ,EAGFxQ,EAHEwQ,yBACAC,EAEFzQ,EAFEyQ,uBACAjM,EACFxE,EADEwE,oBAAqBC,EACvBzE,EADuByE,uBAJT,EAc6BJ,GAAkBG,EAAqBC,EAAwB,kBAd5F,mBAcXsC,EAdW,KAcQC,EAdR,KAgBlB,OACM,yBACM/G,UAAU,OACV8E,aAAcgC,EACd/B,aAAcgC,EACdlC,QAdQ,SAACxD,GACf,IAAMgI,EAAOC,KAAKJ,MAAMuH,aAAaC,QAAQ,cAE7CrH,GAAQA,EAAK1N,SAAW4U,EAAyBlH,EAAK1N,SACtD0N,GAAQA,EAAKrM,WAAawT,EAAuBnH,EAAKrM,aAWhD,kBAAC,GAAD,MACA,yBAAKgD,UAAU,kBCgBlBoC,I,OAAAA,aAdS,SAACxG,EAAOyG,GAAR,MAAsB,CACxC1G,QAASC,EAAMD,QACfqB,UAAWpB,EAAMoB,cAGI,SAACwF,EAAUH,GAAX,MAAyB,CAC9CkC,oBAAqB,SAACnG,GAChBoE,EAASyB,GAAW7F,KAE1BoG,uBAAwB,WAClBhC,EhDoPC,CACD1G,KjBzOmB,wBiERhBsG,EAvCG,SAACrC,GAAW,IAChBpE,EAAoEoE,EAApEpE,QAASqB,EAA2D+C,EAA3D/C,UAAWuH,EAAgDxE,EAAhDwE,oBAAqBC,EAA2BzE,EAA3ByE,uBAD1B,EAWwBJ,GAAkBG,EAAqBC,EAAwB,uBAXvF,mBAWhBsC,EAXgB,KAWGC,EAXH,KAavB,OACM,yBACM/G,UAAU,YACV8E,aAAcgC,EACd/B,aAAcgC,EACdlC,QAfQ,SAACxD,GACf,IAAMgI,EAAOC,KAAKC,UAAU,CACtB5N,UACAqB,cAENyT,aAAaE,QAAQ,YAAatH,KAW5B,kBAAC,GAAD,MACA,yBAAKrJ,UAAU,mBCyBlBoC,I,OAAAA,aAhBS,SAACxG,EAAOyG,GAAR,MAAsB,MAInB,SAACG,EAAUH,GAAX,MAAyB,CAC9CkC,oBAAqB,SAACnG,GAChBoE,EAASyB,GAAW7F,KAE1BoG,uBAAwB,WAClBhC,EjDiPC,CACD1G,KjBzOmB,qBkEPzB8U,sBAAuB,WACjBpO,GjD+CC,SAACA,GAEFA,EAASS,EAAgB,KAEzBT,EAASK,KAETL,EAASiB,EAAkB,KAE3BjB,EAASqB,aiDnDNzB,EA5CD,SAACrC,GAAW,IACZwE,EAAuExE,EAAvEwE,oBAAqBC,EAAkDzE,EAAlDyE,uBAAwBoM,EAA0B7Q,EAA1B6Q,sBADlC,EAE4BxM,GAAkBG,EAAqBC,EAAwB,kBAF3F,mBAEZsC,EAFY,KAEOC,EAFP,KASnB,OACM,yBACMlC,QARS,SAACxD,GAEhBuP,IAEAH,aAAaI,WAAW,cAKlB7Q,UAAU,QACV8E,aAAcgC,EACd/B,aAAcgC,GACd,kBAAC,GAAD,MACA,yBAAK/G,UAAU,cACT,yBAAKA,UAAU,eACf,yBAAKA,UAAU,cAErB,yBAAKA,UAAU,iBACT,yBAAKA,UAAU,eACf,yBAAKA,UAAU,mBCiBxB8Q,I,OA9CC,SAAC/Q,GACX,IAAMgR,EAAgBrO,uBAChB,SAACsO,GAIK,OAAIA,KAHS,IAAI9U,MACK+U,SAGT,CACDC,WAAY,WAGX,KAEhB,IACHC,EAAmBzO,uBACnB,SAACsO,GACK,IAAMI,EAAO,IAAIlV,KACXmV,EAAoBD,EAAKE,UAC3BC,EAAoBH,EAAKH,SAM7B,OAJsB,IAAtBM,IAA4BA,EAAoB,GACnC,IAAbP,IAAmBA,EAAW,GAENK,EAAoBL,EAAWO,IAG7D,IAEN,OACM,yBAAKvR,UAAU,WAEH,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAGvD,KAAI,SAAC+U,EAAKnV,EAAGC,GAC7B,OACM,yBAAK0D,UAAU,WAAW8I,IAAK0I,GACzB,yBAAKxR,UAAU,OACT,yBAAKA,UAAU,WAAWmR,EAAiBK,IAC3C,yBAAKxR,UAAU,QACTmF,MAAO4L,EAAcS,aChB5DC,I,OApBF,SAAC1R,GAAW,IAAD,EACMa,mBAAS,YADf,mBACX5B,EADW,KACL0S,EADK,KAclB,OAXA1Q,qBAAU,WACJ,ItEOY2Q,EsEPNC,GtEOMD,EsEPc,WAEpBD,ECVkB,WAC9B,IAAMvV,EAAM,IAAID,KAEZ2V,EAAO1V,EAAI2V,WACXC,EAAS5V,EAAI6V,aACbC,EAAS9V,EAAI+V,aAMjB,OAJAL,EAAO,KAAOA,EAAO,IAAMA,GAC3BE,EAAS,KAAOA,EAAS,IAAMA,GAC/BE,EAAS,KAAOA,EAAS,IAAMA,GAExBJ,EAAO,IAAME,EAAS,IAAME,EDDfE,KtEMpB5S,EAAMiC,KAAKmQ,GACJpS,EAAMhD,OAAS,GsELhB,OAAO,WtEOO,IAAC6V,IsELER,EtEMvBrS,EAAM8S,OAAOD,EAAO,MsEJjB,IAGG,yBAAKpS,UAAU,QACRhB,KERJsT,I,OAPH,SAACvS,GACP,OACM,yBAAKC,UAAU,ODOQ,WAC7B,IAAM7D,EAAM,IAAID,KAEZqW,EAAOpW,EAAIqW,cACXC,EAAQtW,EAAIuW,WAAa,EACzBC,EAAMxW,EAAImV,UAMd,OAJAiB,EAAO,KAAOA,EAAO,IAAMA,GAC3BE,EAAQ,KAAOA,EAAQ,IAAMA,GAC7BE,EAAM,KAAOA,EAAM,IAAMA,GAElBJ,EAAO,IAAME,EAAQ,IAAME,ECjBrBC,MC2CJxQ,gBATS,SAACxG,EAAOyG,GAAR,MAAsB,CACxCkI,kBAAqC,uBAAlB3O,EAAMuC,QACzBqM,SAAU5O,EAAMyC,mBAGK,SAACmE,EAAUH,GAAX,MAAyB,KAIrCD,EAtCM,SAACrC,GAAW,IACnBwK,EAAgCxK,EAAhCwK,kBAAmBC,EAAazK,EAAbyK,SAEvBxK,EAAY,eAEhB,OADCuK,GAAqBC,KAAcxK,GAAa,WAE3C,yBAAKA,UAAWA,GACV,yBAAKmF,MAAO,CACNI,MAAO,UAEP,kBAAC,GAAD,MACA,yBAAKvF,UAAU,cACT,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,QAGZ,6BACM,kBAAC,GAAD,OAEN,yBAAKmF,MAAO,CAAEI,MAAO,UACf,kBAAC,GAAD,MACA,kBAAC,GAAD,WCkCT9E,oBA3Df,SAAgBV,GAAQ,IACVY,EAAYZ,EAAZY,QA+CR,OA7CAK,qBACM,WACM,IAAM6R,EAAkB,SAACxR,GAGfA,EAAEyR,QAAoB,MAAVzR,EAAEyH,KACZ5E,KAAcpC,SAEhBT,EAAEyR,QAAoB,MAAVzR,EAAEyH,KACZ7G,SAASkC,cAAc,mCAAmC4O,QAE5D1R,EAAEyR,QAAUzR,EAAE2R,UAAsB,MAAV3R,EAAEyH,KAC1B7G,SAASkC,cAAc,iCAAiC4O,QAE1D1R,EAAEyR,QAAoB,MAAVzR,EAAEyH,KACZ7G,SAASkC,cAAc,4BAA4B4O,QAErD1R,EAAEyR,QAAoB,MAAVzR,EAAEyH,MACZ7G,SAASkC,cAAc,uBAAuB4O,QAC9C9Q,SAASkC,cAAc,yBAAyB4O,SAEhD1R,EAAEyR,QAAqB,UAAVzR,EAAEyH,KACf7G,SAASkC,cAAc,mBAAmB4O,QAE5C1R,EAAEyR,QAAoB,UAAVzR,EAAEyH,KACZ7G,SAASkC,cAAc,sBAAsB4O,QAE/C1R,EAAEyR,QAAoB,MAAVzR,EAAEyH,MACZ7G,SAASkC,cAAc,8BAA8B4O,QACrD9Q,SAASkC,cAAc,gCAAgC4O,SAEzD1R,EAAEyR,QAAoB,MAAVzR,EAAEyH,KACZnI,EAAQa,KAAK,cAQzB,OAJAS,SAASgR,iBAAiB,QAASJ,GAAiB,GAEpD5Q,SAASC,MAAQ,gBAEV,WACDD,SAASiR,oBAAoB,QAASL,GAAiB,MAEhE,CAAClS,IAGJ,yBAAKX,UAAU,UACT,6BACM,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,WCvBTmT,OAtBf,WAWE,OAVAnS,qBAAU,WAKR,OAHAxB,EAAM,KACNX,QAAQC,IAAI,oBAEL,WACLc,OAED,IAGD,kBAAC,IAAD,CAAUpB,MAAOA,GACf,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAU4U,KAAK,IAAIC,GAAG,cACtB,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,YAAYC,UAAWxR,IACzC,kBAAC,IAAD,CAAOsR,OAAK,EAACC,KAAK,UAAUC,UAAWC,QCtB3BC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASlF,MACvB,2DCTNmF,IAASC,OAAO,kBAAC,GAAD,MAAS9R,SAAS+R,eAAe,SDwH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,mB","file":"static/js/main.8fbd392b.chunk.js","sourcesContent":["import {\n      reverseThroughArray\n} from './dev/lib';\n\nlet tasks = [];\nlet intervalId;\n\nexport const start = (intervalDuration) => { // start interval\n      intervalId = setInterval(() => {\n            reverseThroughArray(tasks, (task, ri) => { // excute all tasks\n                  task(); // excute task\n            })\n      }, intervalDuration);\n};\n\nexport const addTask = (fun) => {\n      tasks.push(fun);\n      return tasks.length - 1;\n};\nexport const removeTask = (index) => {\n      tasks.splice(index, 1);\n};\nexport const stop = () => {\n      clearInterval(intervalId);\n      tasks = null;\n};","import {\n      ADD_TAG,\n      REMOVE_TAG,\n      RECIEVE_TAG,\n      CONCAT_TAG_LIST,\n      OVERRIDE_TAG_LIST,\n      REMOVE_TAG_LIST\n} from \"../actions/actionTypes\";\n\nconst tagList = (state = [], action) => {\n      switch (action.type) {\n            case ADD_TAG:\n                  return [{\n                        tag: action.value,\n                        id: '' + Date.now()\n                  }, ...state];\n            case REMOVE_TAG:\n                  return state.filter((tag, i, arr) => {\n                        return tag.id !== action.tag.id;\n                  });\n            case RECIEVE_TAG:\n                  return (state.filter((tag, i, arr) => {\n                              return tag.id === action.tag.id\n                        })).length > 0 ?\n                        state : [{\n                                    tag: action.tag.tag,\n                                    id: action.tag.id\n                              },\n                              ...state\n                        ];\n            case CONCAT_TAG_LIST:\n                  const idExistedInStore = state.map((tagInStore, i, arr) => {\n                        return tagInStore.id;\n                  });\n                  const allTheTagIsNewToStore = action.tagList.filter((tagInAction, i, arr) => {\n                        return (idExistedInStore.indexOf(tagInAction.id)) === -1;\n                  });\n                  return allTheTagIsNewToStore.length > 0 ? [\n                              ...state,\n                              ...allTheTagIsNewToStore\n                        ] :\n                        state;\n\n            case OVERRIDE_TAG_LIST:\n                  return [\n                        ...action.tagList\n                  ];\n            case REMOVE_TAG_LIST:\n                  const idListForRemove = action.tagList.map((tag, i, arr) => {\n                        return tag.id;\n                  });\n                  return state.filter((tag, i, arr) => {\n                        return idListForRemove.indexOf(tag.id) === -1;\n                  });\n            default:\n                  return state;\n      }\n};\n\nexport default tagList;","/**-----------------------------------------------------------------------------------------------\n * + tag list\n * -----------------------------------------------------------------------------------------------\n */\nexport const ADD_TAG = \"add_tag\";\nexport const REMOVE_TAG = \"remove_tag\";\nexport const RECIEVE_TAG = \"recieve_tag\";\nexport const CONCAT_TAG_LIST = \"concat_tag_list\";\nexport const OVERRIDE_TAG_LIST = \"override_tag_list\";\nexport const REMOVE_TAG_LIST = \"remove_tag_list\";\n\n/**-----------------------------------------------------------------------------------------------\n * + tag session list\n * -----------------------------------------------------------------------------------------------\n */\nexport const ADD_TAG_TO_SESSION = \"add_tag_to_session\";\nexport const REMOVE_TAG_IN_SESSION = \"remove_tag_in_session\";\nexport const CLEAR_TAG_SESSION = \"clear_tag_session\";\nexport const APPEND_TAG_SESSIOJN_LIST = \"append_tag_sessiojn_list\";\n\n/**-----------------------------------------------------------------------------------------------\n * + point list\n * -----------------------------------------------------------------------------------------------\n */\nexport const ADD_POINT = \"add_point\";\nexport const REMOVE_POINT = \"remove_point\";\nexport const RECIEVE_POINT = \"recieve_point\";\nexport const CONCAT_POINT_LIST = \"concat_point_list\";\nexport const OVERRIDE_POINT_LIST = \"override_point_list\";\nexport const REMOVE_POINT_LIST = \"remove_point_list\";\n\n/**-----------------------------------------------------------------------------------------------\n * + point session list\n * -----------------------------------------------------------------------------------------------\n */\nexport const ADD_POINT_TO_SESSION = \"add_point_to_session\";\nexport const REMOVE_POINT_IN_SESSION = \"remove_point_in_session\";\nexport const CLEAR_POINT_SESSION = \"clear_point_session\";\nexport const APPEND_POINT_SESSION = \"append_point_session\";\nexport const TOGGLE_POINT_STATUS_IN_SESSION = \"toggle_point_status_in_session\";\n/**-----------------------------------------------------------------------------------------------\n * + eject board\n * -----------------------------------------------------------------------------------------------\n */\nexport const SET_CLICKABLE_EJECT_BOARD = \"set_clickable_eject_board\";\n/**-----------------------------------------------------------------------------------------------\n * + tag belong list\n * -----------------------------------------------------------------------------------------------\n */\nexport const OVERRIDE_TAG_BELONG_LIST = \"override_tag_belong_list\";\nexport const CLEAR_TAG_BELONG_LIST = \"clear_tag_belong_list\";\n/**-----------------------------------------------------------------------------------------------\n * + hover on\n * -----------------------------------------------------------------------------------------------\n */\nexport const SET_HOVER_ON = \"set_hover_on\";\nexport const REMOVE_HOVER_ON = \"remove_hover_on\";\n/**-----------------------------------------------------------------------------------------------\n * + SwitchUI status\n * -----------------------------------------------------------------------------------------------\n */\nexport const SET_SWITCH_UI_STATUS = \"set_switch_ui_status\";","import {\n      ADD_TAG_TO_SESSION,\n      REMOVE_TAG_IN_SESSION,\n      CLEAR_TAG_SESSION,\n      APPEND_TAG_SESSIOJN_LIST\n} from \"../actions/actionTypes\";\n\nconst tagSessionList = (state = [], action) => {\n      switch (action.type) {\n            case ADD_TAG_TO_SESSION:\n                  return [{\n                        tag: action.tag.tag,\n                        id: action.tag.id\n                  }, ...state];\n            case REMOVE_TAG_IN_SESSION:\n                  return state.filter((tag, i, arr) => {\n                        return tag.id !== action.tag.id;\n                  });\n            case CLEAR_TAG_SESSION:\n                  return [];\n            case APPEND_TAG_SESSIOJN_LIST:\n                  const idExistedInStore = state.map((tagInStore, i, arr) => {\n                        return tagInStore.id;\n                  });\n                  const allTheTagIsNewToStore = action.tagList.filter((tagInAction, i, arr) => {\n                        return (idExistedInStore.indexOf(tagInAction.id)) === -1;\n                  });\n                  return allTheTagIsNewToStore.length > 0 ? [\n                              ...state,\n                              ...allTheTagIsNewToStore\n                        ] :\n                        state;\n            default:\n                  return state;\n      }\n}\n\nexport default tagSessionList;","import {\n      ADD_POINT,\n      REMOVE_POINT,\n      RECIEVE_POINT,\n      CONCAT_POINT_LIST,\n      OVERRIDE_POINT_LIST,\n      REMOVE_POINT_LIST\n} from \"../actions/actionTypes\";\n\nconst pointList = (state = [], action) => {\n      switch (action.type) {\n            case ADD_POINT:\n                  return [{\n                              point: action.pointValue,\n                              tagList: action.tagSessionList,\n                              status: false,\n                              id: Date.now()\n                        },\n                        ...state\n                  ];\n            case RECIEVE_POINT:\n                  return (state.filter((point, i, arr) => {\n                              return point.id === action.point.id;\n                        })).length > 0 ?\n                        state : [{\n                                    point: action.point.point,\n                                    tagList: action.point.tagList,\n                                    status: action.point.status,\n                                    id: action.point.id\n                              },\n                              ...state\n                        ];\n            case REMOVE_POINT:\n                  return state.filter((point, i, arr) => {\n                        return point.id !== action.point.id;\n                  });\n            case CONCAT_POINT_LIST:\n                  const newPointListForConcat = action.pointSessionList.filter((pointInAction, i, arr) => {\n                        let isThisPointExistedInStore = false;\n\n                        let ri = state.length;\n                        while (ri--) {\n                              if (state[ri].id === pointInAction.id) {\n                                    isThisPointExistedInStore = true;\n                                    break;\n                              }\n                        }\n\n                        return !isThisPointExistedInStore;\n                  });\n                  return newPointListForConcat.length > 0 ? [\n                              ...state,\n                              ...action.pointSessionList\n                        ] :\n                        state;\n            case OVERRIDE_POINT_LIST:\n                  return [\n                        ...action.pointList\n                  ];\n            case REMOVE_POINT_LIST:\n                  const pointIdListForRemove = action.pointList.map((point, i, arr) => {\n                        return point.id;\n                  });\n                  return state.filter((pointInStore, i, arr) => {\n                        return pointIdListForRemove.indexOf(pointInStore.id) === -1;\n                  });\n            default:\n                  return state;\n      }\n};\n\nexport default pointList;","import {\n      ADD_POINT_TO_SESSION,\n      REMOVE_POINT_IN_SESSION,\n      CLEAR_POINT_SESSION,\n      APPEND_POINT_SESSION,\n      TOGGLE_POINT_STATUS_IN_SESSION\n} from \"../actions/actionTypes\";\n\nconst pointSessionList = (state = [], action) => {\n      switch (action.type) {\n            case ADD_POINT_TO_SESSION:\n                  return [{\n                              point: action.point.point,\n                              tagList: action.point.tagList,\n                              status: action.point.status,\n                              id: action.point.id\n                        },\n                        ...state\n                  ];\n            case REMOVE_POINT_IN_SESSION:\n                  return state.filter((point, i, arr) => {\n                        return point.id !== action.point.id;\n                  });\n            case CLEAR_POINT_SESSION:\n                  return [];\n            case APPEND_POINT_SESSION:\n                  const newPointList = action.pointList.filter((pointInAction, i, arr) => {\n                        let ri = state.length;\n                        let isExistedInPointSessionList = false;\n                        while (ri--) {\n                              if (state[ri].id === pointInAction.id) {\n                                    isExistedInPointSessionList = true;\n                                    break;\n                              }\n                        }\n                        return !isExistedInPointSessionList;\n                  });\n                  return newPointList.length > 0 ? [\n                              ...state,\n                              ...newPointList\n                        ] :\n                        state;\n            case TOGGLE_POINT_STATUS_IN_SESSION:\n                  const {\n                        point,\n                        point: {\n                              id,\n                              status\n                        }\n                  } = action;\n\n                  return state.map((pointInStore, i, arr) => {\n                        if (pointInStore.id === id) {\n                              return Object.assign({}, point, {\n                                    status: !status\n                              });\n                        } else {\n                              return pointInStore;\n                        }\n                  });\n            default:\n                  return state;\n      }\n};\n\nexport default pointSessionList;","import {\n      SET_CLICKABLE_EJECT_BOARD\n} from \"../actions/actionTypes\";\n\nconst ejectBoard = (state = {\n      isOn: false\n}, action) => {\n      switch (action.type) {\n            case SET_CLICKABLE_EJECT_BOARD:\n                  return {\n                        isOn: action.targetStatus\n                  }\n                  default:\n                        return state;\n      }\n}\nexport default ejectBoard;","import {\n      OVERRIDE_TAG_BELONG_LIST,\n      CLEAR_TAG_BELONG_LIST\n} from \"../actions/actionTypes\";\n\nconst tagBelongList = (state = [], action) => {\n      switch (action.type) {\n            case OVERRIDE_TAG_BELONG_LIST:\n                  return [\n                        ...action.point.tagList\n                  ];\n            case CLEAR_TAG_BELONG_LIST:\n                  return [];\n            default:\n                  return state;\n      }\n};\n\nexport default tagBelongList;","import {\n      SET_HOVER_ON,\n      REMOVE_HOVER_ON\n} from \"../actions/actionTypes\";\n\nconst hoverOn = (state = \"\", action) => {\n      switch (action.type) {\n            case SET_HOVER_ON:\n                  return action.target;\n            case REMOVE_HOVER_ON:\n                  return \"\";\n            default:\n                  return state;\n      }\n};\nexport default hoverOn;","import {\n      SET_SWITCH_UI_STATUS\n} from \"../actions/actionTypes\";\n\nconst switchUIstatus = (state = false, action) => {\n      switch (action.type) {\n            case SET_SWITCH_UI_STATUS:\n                  return action.targetStatus;\n            default:\n                  return state;\n      }\n};\nexport default switchUIstatus;","import {\n      combineReducers\n} from 'redux';\n\nimport tagList from './tagList';\nimport tagSessionList from './tagSessionList';\nimport pointList from './pointList';\nimport pointSessionList from './pointSessionList';\nimport ejectBoard from './ejectBoard';\nimport tagBelongList from './tagBelongList';\nimport hoverOn from './hoverOn';\nimport switchUIstatus from './switchUIstatus';\nconst rootReducer = combineReducers({\n      tagList,\n      tagSessionList,\n      pointList,\n      pointSessionList,\n      ejectBoard,\n      tagBelongList,\n      hoverOn,\n      switchUIstatus\n});\n\nexport default rootReducer;","import {\n      createStore,\n      applyMiddleware\n} from 'redux';\nimport thunk from 'redux-thunk';\n\nimport rootReducer from './reducers/rootReducer';\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nexport default store;","export const log = console.log.bind(console);\nexport const tS = console.time.bind(console);\nexport const tE = console.timeEnd.bind(console);\n\nconst excuteDurationHolder = {\n      isStarted: false,\n      context: '',\n}\n\nconst testTime = (ctx) => {\n      const {\n            isStarted,\n            context\n      } = excuteDurationHolder;\n\n      if (!isStarted) {\n            excuteDurationHolder.context = ctx ? ctx : 'function excute time';\n            tS(excuteDurationHolder.context);\n            excuteDurationHolder.isStarted = true;\n      } else {\n            tE(context);\n            excuteDurationHolder.isStarted = false;\n            excuteDurationHolder.context = '';\n      }\n}\n\nexport const reverseThroughArray = (array, processItem) => { // better for read array\n      // testTime('reverseThroughArray');\n      let ri = array.length;\n      while (ri--) {\n            processItem(array[ri], ri);\n      }\n      // testTime();\n};\n\nexport const throughArray = (array, processItem) => {\n      testTime('throughArray');\n      let maxIndex = array.length - 1,\n            ri = maxIndex,\n            currentIndex;\n      while (ri--) {\n            currentIndex = maxIndex - ri;\n            processItem(array[currentIndex], currentIndex);\n      }\n      testTime();\n};\n\nexport const excuteNTimes = (n, processFunction) => { // better to create array\n      testTime('excuteNTimes');\n      let maxIndex = n - 1;\n      while (n--) {\n            processFunction(maxIndex - n);\n      }\n      testTime();\n};\n\nexport const excuteNTimesRe = (n, processFunction) => {\n      testTime('excuteNTimesRe');\n      while (n--) {\n            processFunction(n);\n      }\n      testTime();\n};\n\nexport const getFilteredArray = (arr, conditionOfItem) => {\n      let result = [];\n      if (arr.filter) { // arr.filter is better\n            testTime('filterArray: filter');\n            result = arr.filter(conditionOfItem);\n            testTime();\n      } else {\n            testTime('filterArray: pollyfill');\n            reverseThroughArray(arr, (itemRe, ri) => {\n                  result[result.length] = itemRe;\n            });\n            testTime();\n      }\n      return result;\n};\n\nexport const getMappedArray = (arr, generateNewItem) => {\n      let result = [];\n      if (arr.map) { // arr.map is better\n            testTime('getMappedArray: map');\n            result = arr.map(generateNewItem);\n            testTime();\n      } else {\n            testTime('getMappedArray: pollyfill');\n            throughArray(arr, (item, i) => {\n                  result[i] = generateNewItem(item, i);\n            });\n            testTime();\n      }\n      return result;\n};\n\nexport const _new = (fn, ...args) => {\n      const obj = Object.create(fn.prototype);\n      const result = fn.apply(obj, args);\n      return result instanceof Object ? result : obj;\n};\n\nexport const sleep = (ms) => new Promise((resolve, reject) => {\n      setTimeout(resolve, ms);\n});\n\nexport const trim = (str) => {\n      if (str.trim) {\n            return str.trim();\n      } else {\n            str.replace(/^\\s+|\\s+$/g, '');\n      }\n};","import React from 'react';\nimport './style.scss';\n\nfunction CodeInput(props) {\n      return (\n            <div className='CodeInput'>\n                  {props.children}\n            </div>\n      );\n}\n\nexport default CodeInput;","let codes = [];\nconst secret = [2, 2, 2, 2, 2, 2];\n\nconst isValid = () => {\n      let i = 6;\n      while (i--) {\n            if (codes[i] !== secret[i]) {\n                  return false;\n            }\n      }\n      return true;\n}\nexport const resetMemorizedCode = () => {\n      codes.length = 0;\n}\nexport const setCode = (n, i) => {\n      codes[i] = parseInt(n);\n      const isAllMatched = isValid();\n      isAllMatched && resetMemorizedCode();\n      return isAllMatched;\n}","import React, { useState, useRef, useEffect } from 'react';\nimport './style.scss';\n\nimport { withRouter } from 'react-router-dom';\nimport { setCode } from '../../../utils/code';\n\nfunction Code(props) {\n      const { idx, history } = props;\n\n      const [value, setValue] = useState('');\n      const inputEl = useRef(null);\n      useEffect(() => {\n            // process focus on first\n            if (!value && idx === 0) {\n                  setTimeout(() => {\n                        inputEl.current.focus();\n                  }, 100);\n            }\n      });\n\n      const handleChange = (e) => {\n            let inputValue = e.target.value;\n            const reg = /^\\d{1}$/;\n\n            if (reg.test(inputValue)) {\n                  setValue(inputValue);\n                  if (setCode(inputValue, idx)) { // return true when all matched\n                        history.push('/manage');\n                  };\n                  const nextDom = inputEl.current.nextElementSibling;\n                  !!nextDom && nextDom.focus();\n\n            } else if (!inputValue) {\n                  setValue('');\n                  setCode(undefined, idx);\n                  const prevDom = inputEl.current.previousElementSibling;\n                  !!prevDom && prevDom.select();\n            }\n      };\n\n      return (\n            <input\n                  className='Code'\n                  type=\"text\"\n                  value={value}\n                  onChange={handleChange}\n                  ref={inputEl} />\n      );\n}\n\nexport default withRouter(Code);","import React, { useEffect } from 'react';\nimport './style.scss';\n\nimport CodeInput from '../../components/CodeInput/CodeInput';\nimport Code from '../../components/CodeInput/Code/Code';\n\nfunction Entrance(props) {\n      useEffect(() => {\n            document.title = \"Aresun Entrance\"\n            return () => {\n                  // nothing to clear\n            };\n      }, []);\n\n      return (\n            <div className=\"Entrance\">\n                  <CodeInput>\n                        <Code idx={0} />\n                        <Code idx={1} />\n                        <Code idx={2} />\n                        <Code idx={3} />\n                        <Code idx={4} />\n                        <Code idx={5} />\n                  </CodeInput>\n            </div>\n      );\n}\n\nexport default Entrance;","import React from 'react';\nimport './style.scss';\n\nconst Indicator = (props) => {\n      return (\n            <div className='Indicator'>\n                  <div className='right-arrow'></div>\n            </div>\n      )\n}\nexport default Indicator;","import React, { useCallback } from 'react';\nimport './style.scss';\n\nimport { connect } from 'react-redux';\n\nconst Input = (props) => {\n      const { isHoverOnClearInput, isHoverOnHighlight } = props;\n\n      const handleKeyUp = useCallback(\n            (e) => {\n                  // console.log('entered key: ', e.key);\n                  // console.log('e.target.value', e.target.value);\n            },\n            [],\n      );\n\n      let className = \"Input\";\n      isHoverOnClearInput && (className += \" ready-for-clear\");\n      isHoverOnHighlight && (className += \" ready-to-append-highlight-format\");\n\n      return (\n            <input className={className} type=\"text\" onKeyUp={handleKeyUp} />\n      )\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n      isHoverOnClearInput: state.hoverOn === \"hover-on-clear-input\",\n      isHoverOnHighlight: state.hoverOn === \"hover-on-append-highlight-format\"\n});\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n\n});\n\nexport default connect(\n      mapStateToProps,\n      mapDispatchToProps\n)(Input);","import {\n      ADD_TAG,\n      REMOVE_TAG,\n      ADD_TAG_TO_SESSION,\n      REMOVE_TAG_IN_SESSION,\n      RECIEVE_TAG,\n      CLEAR_TAG_SESSION,\n      CONCAT_TAG_LIST,\n      ADD_POINT,\n      REMOVE_POINT,\n      ADD_POINT_TO_SESSION,\n      RECIEVE_POINT,\n      REMOVE_POINT_IN_SESSION,\n      CLEAR_POINT_SESSION,\n      CONCAT_POINT_LIST,\n      APPEND_TAG_SESSIOJN_LIST,\n      APPEND_POINT_SESSION,\n      OVERRIDE_TAG_LIST,\n      OVERRIDE_POINT_LIST,\n      SET_CLICKABLE_EJECT_BOARD,\n      REMOVE_TAG_LIST,\n      REMOVE_POINT_LIST,\n      TOGGLE_POINT_STATUS_IN_SESSION,\n      OVERRIDE_TAG_BELONG_LIST,\n      CLEAR_TAG_BELONG_LIST,\n      SET_HOVER_ON,\n      REMOVE_HOVER_ON,\n      SET_SWITCH_UI_STATUS\n} from \"./actionTypes\";\n\n/**-----------------------------------------------------------------------------------------------\n * + thunk\n * -----------------------------------------------------------------------------------------------\n */\nexport const moveTagToSession = (tag) => {\n      return (dispatch) => {\n            dispatch(removeTag(tag));\n            dispatch(addTagToSession(tag));\n      };\n}\nexport const movePointToSession = (point) => {\n      return (dispatch) => {\n            dispatch(removePoint(point));\n            dispatch(addPointToSession(point));\n      };\n}\nexport const returnThisTag = (tag) => {\n      return (dispatch) => {\n            dispatch(recieveTag(tag));\n            dispatch(removeTagInSession(tag));\n      }\n}\nexport const returnThisPoint = (point) => {\n      return (dispatch) => {\n            dispatch(recievePoint(point));\n            dispatch(removePointInSession(point));\n      }\n}\nexport const returnWholeTagSession = (tagSessionList) => {\n      return (dispatch) => {\n            dispatch(clearTagSession());\n            dispatch(concatTagList(tagSessionList));\n      }\n}\nexport const returnWholePointSession = (pointSessionList) => {\n      return (dispatch) => {\n            dispatch(clearPointSession());\n            dispatch(concatPointList(pointSessionList));\n      }\n}\nexport const ejectThisPoint = (point) => {\n      return (dispatch) => {\n            dispatch(removePointInSession(point));\n            dispatch(removeTagList(point.tagList));\n            dispatch(appendTagSessionList(point.tagList));\n            dispatch(setClickableEjectBoard(false)); // turn off the eject board\n      }\n}\nexport const moveTagListToSessionList = (tagList) => {\n      return (dispatch) => {\n            dispatch(removeTagList(tagList));\n            dispatch(appendTagSessionList(tagList));\n      }\n}\nexport const movePointListToSessionList = (pointList) => {\n      return (dispatch) => {\n            dispatch(removePointList(pointList));\n            dispatch(appendPointSession(pointList));\n      }\n}\nexport const appendStringDataToSession = (tagList, pointList) => {\n      return (dispatch) => {\n            dispatch(appendTagSessionList(tagList));\n            dispatch(appendPointSession(pointList));\n      }\n}\nexport const removeUIdata = () => {\n      return (dispatch) => {\n            // clear tag list\n            dispatch(overrideTagList([]));\n            // clear tag session list\n            dispatch(clearTagSession());\n            // clear point list\n            dispatch(overridePointList([]));\n            // clear point session list\n            dispatch(clearPointSession());\n      };\n};\n/**-----------------------------------------------------------------------------------------------\n * + tag list\n * -----------------------------------------------------------------------------------------------\n */\nexport const addTag = (value) => {\n      return {\n            type: ADD_TAG,\n            value\n      }\n};\nexport const recieveTag = (tag) => {\n      return {\n            type: RECIEVE_TAG,\n            tag\n      }\n};\nexport const removeTag = (tag) => {\n      return {\n            type: REMOVE_TAG,\n            tag\n      }\n};\nexport const concatTagList = (tagList) => {\n      return {\n            type: CONCAT_TAG_LIST,\n            tagList\n      }\n};\nexport const overrideTagList = (tagList) => {\n      return {\n            type: OVERRIDE_TAG_LIST,\n            tagList\n      }\n};\nexport const removeTagList = (tagList) => {\n      return {\n            type: REMOVE_TAG_LIST,\n            tagList\n      }\n};\n\n/**-----------------------------------------------------------------------------------------------\n * + tag session list\n * -----------------------------------------------------------------------------------------------\n */\nexport const addTagToSession = (tag) => {\n      return {\n            type: ADD_TAG_TO_SESSION,\n            tag\n      }\n}\nexport const removeTagInSession = (tag) => {\n      return {\n            type: REMOVE_TAG_IN_SESSION,\n            tag\n      }\n}\nexport const clearTagSession = () => {\n      return {\n            type: CLEAR_TAG_SESSION,\n      }\n}\nexport const appendTagSessionList = (tagList) => {\n      return {\n            type: APPEND_TAG_SESSIOJN_LIST,\n            tagList\n      }\n}\n/**-----------------------------------------------------------------------------------------------\n * + points\n * -----------------------------------------------------------------------------------------------\n */\nexport const addPoint = (pointValue, tagSessionList) => {\n      return {\n            type: ADD_POINT,\n            pointValue,\n            tagSessionList\n      }\n}\nexport const removePoint = (point) => {\n      return {\n            type: REMOVE_POINT,\n            point\n      }\n}\nexport const recievePoint = (point) => {\n      return {\n            type: RECIEVE_POINT,\n            point\n      }\n}\nexport const concatPointList = (pointSessionList) => {\n      return {\n            type: CONCAT_POINT_LIST,\n            pointSessionList\n      }\n};\nexport const overridePointList = (pointList) => {\n      return {\n            type: OVERRIDE_POINT_LIST,\n            pointList\n      }\n};\nexport const removePointList = (pointList) => {\n      return {\n            type: REMOVE_POINT_LIST,\n            pointList\n      }\n};\n\n/**-----------------------------------------------------------------------------------------------\n * + point session\n * -----------------------------------------------------------------------------------------------\n */\nexport const addPointToSession = (point) => {\n      return {\n            type: ADD_POINT_TO_SESSION,\n            point\n      }\n};\nexport const removePointInSession = (point) => {\n      return {\n            type: REMOVE_POINT_IN_SESSION,\n            point\n      }\n};\nexport const clearPointSession = () => {\n      return {\n            type: CLEAR_POINT_SESSION\n      }\n};\n\nexport const appendPointSession = (pointList) => {\n      return {\n            type: APPEND_POINT_SESSION,\n            pointList\n      }\n};\nexport const togglePointStatusInSession = (point) => {\n      return {\n            type: TOGGLE_POINT_STATUS_IN_SESSION,\n            point\n      }\n};\n/**-----------------------------------------------------------------------------------------------\n * + eject board\n * -----------------------------------------------------------------------------------------------\n */\nexport const setClickableEjectBoard = (targetStatus) => {\n      return {\n            type: SET_CLICKABLE_EJECT_BOARD,\n            targetStatus\n      }\n};\n/**-----------------------------------------------------------------------------------------------\n * + tag belong list\n * -----------------------------------------------------------------------------------------------\n */\nexport const overrideTagBelongList = (point) => {\n      return {\n            type: OVERRIDE_TAG_BELONG_LIST,\n            point\n      }\n};\nexport const clearTagBelongList = () => {\n      return {\n            type: CLEAR_TAG_BELONG_LIST,\n      }\n};\n/**-----------------------------------------------------------------------------------------------\n * + hover on\n * -----------------------------------------------------------------------------------------------\n */\nexport const setHoverOn = (target) => {\n      return {\n            type: SET_HOVER_ON,\n            target\n      }\n};\nexport const removeHoverOn = () => {\n      return {\n            type: REMOVE_HOVER_ON\n      }\n};\n/**-----------------------------------------------------------------------------------------------\n * + SwitchUI status\n * -----------------------------------------------------------------------------------------------\n */\nexport const setSwitchUIstatus = (targetStatus) => {\n      return {\n            type: SET_SWITCH_UI_STATUS,\n            targetStatus\n      }\n};","export const getInputDom = () => {\n      return document.querySelector('.Input');;\n}","const useHoverOnHandler = (mouseEnterProcedure, mouseLeaveProcedure, target) => {\n      const handleMouseEnter = (e) => {\n            mouseEnterProcedure(target);\n      };\n      const handleMouseLeave = (e) => {\n            mouseLeaveProcedure();\n      };\n\n      return [handleMouseEnter, handleMouseLeave];\n};\nexport default useHoverOnHandler;","import React, { useCallback } from 'react';\nimport './style.scss';\n\nimport { connect } from 'react-redux';\nimport { setHoverOn, removeHoverOn } from '../../../redux/actions/actions';\n\nimport { getInputDom } from '../../../utils/domHolder';\nimport useHoverOnHandler from '../../../hooks/useHoverOnHandler';\n\nconst Clear = (props) => {\n      const { setHoverOnProcedure, removeHoverOnProcedure } = props;\n\n      const handleClick = useCallback((e) => {\n            const dom = getInputDom();\n\n            dom.value = '';\n            dom.focus();\n      }, []);\n\n      const [handleMouseEnter, handleMouseLeave] = useHoverOnHandler(\n            setHoverOnProcedure,\n            removeHoverOnProcedure,\n            \"hover-on-clear-input\");\n\n      return (\n            <div className='Clear'\n                  onClick={handleClick}\n                  onMouseEnter={handleMouseEnter}\n                  onMouseLeave={handleMouseLeave}>\n                  <div className=\"line-0\"></div>\n                  <div className=\"line-1\"></div>\n            </div>\n      )\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n});\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n      setHoverOnProcedure: (target) => {\n            dispatch(setHoverOn(target));\n      },\n      removeHoverOnProcedure: () => {\n            dispatch(removeHoverOn());\n      }\n});\n\nexport default connect(\n      mapStateToProps,\n      mapDispatchToProps\n)(Clear);","export const copyStringToClipboard = (str) => {\n      let textArea = document.createElement(\"textarea\");\n      textArea.style.position = 'fixed';\n      textArea.style.top = 0;\n      textArea.style.left = 0;\n      textArea.style.width = '2em';\n      textArea.style.height = '2em';\n      textArea.style.padding = 0;\n      textArea.style.border = 'none';\n      textArea.style.outline = 'none';\n      textArea.style.boxShadow = 'none';\n      textArea.style.background = 'transparent';\n      textArea.value = str;\n      document.body.appendChild(textArea);\n      textArea.select();\n      try {\n            document.execCommand('copy');\n      } catch (err) {\n            this.throwError('feature not supported by this method' + err.toString());\n      }\n      document.body.removeChild(textArea);\n}","import React, { useCallback } from 'react';\nimport './style.scss';\n\nimport { copyStringToClipboard } from '../../../utils/clipboard';\nimport { getInputDom } from '../../../utils/domHolder';\nimport { trim } from '../../../utils/dev/lib';\n\nconst Copy = (props) => {\n      const handleClick = useCallback((e) => {\n            const dom = getInputDom();\n            \n            const valueToCopy = trim(dom.value);\n            copyStringToClipboard(valueToCopy);\n\n            dom.value = valueToCopy;\n            dom.select();\n      }, []);\n      return (\n            <div className='Copy' onClick={handleClick}>\n                  <div className=\"solid\"></div>\n                  <div className=\"virtual\"></div>\n            </div>\n      )\n}\nexport default Copy;","import React from 'react';\nimport './style.scss';\n\nconst PointIndicator = (props) => {\n      const { appendClass, handler, pointStatus } = props;\n      const className = appendClass ? 'PointIndicator ' + appendClass : 'PointIndicator';\n      const handleClick = (e) => {\n            handler && handler();\n      };\n      const innerPointclassName = pointStatus ? \"innerPoint finished\" : \"innerPoint\";\n      return (\n            <div className={className} onClick={handleClick}>\n                  <div className={innerPointclassName}></div>\n            </div>\n      )\n}\nexport default PointIndicator;","import React from 'react';\nimport './style.scss';\n\nconst Cross = (props) => {\n      const { appendClass } = props;\n      const className = appendClass ? 'Cross ' + appendClass : 'Cross';\n      return (\n            <div className={className}>\n                  <div className=\"vertical\"></div>\n                  <div className=\"horizontal\"></div>\n            </div>\n      )\n}\nexport default Cross;","import React from 'react';\nimport './style.scss';\n\nconst CircleAdd = (props) => {\n      const {\n            handler,\n            mouseEnterHandler,\n            mouseLeaveHandler\n      } = props;\n      return (\n            <div\n                  className='CircleAdd'\n                  onMouseEnter={mouseEnterHandler}\n                  onMouseLeave={mouseLeaveHandler}\n                  onClick={handler}>\n                  <div className=\"vertical\"></div>\n                  <div className=\"horizontal\"></div>\n            </div>\n      )\n}\nexport default CircleAdd;","import React from 'react';\nimport './style.scss';\n\nimport PointIndicator from '../../common/PointIndicator/PointIndicator';\nimport Cross from '../../common/Cross/Cross';\nimport CircleAdd from '../../common/CircleAdd/CircleAdd';\n\nimport { connect } from 'react-redux';\n\nimport { getInputDom } from '../../../utils/domHolder';\nimport { trim } from '../../../utils/dev/lib';\nimport { addPoint, setHoverOn, removeHoverOn } from '../../../redux/actions/actions';\nimport useHoverOnHandler from '../../../hooks/useHoverOnHandler';\n\nconst Add = (props) => {\n      const {\n            addPointProcedure,\n            tagSessionList,\n            setHoverOnProcedure,\n            removeHoverOnProcedure\n      } = props;\n\n      const handleClick = (e) => {\n            const dom = getInputDom();\n            const pointValue = trim(dom.value);\n\n            if (pointValue) {\n                  addPointProcedure(pointValue, tagSessionList);\n\n                  dom.value = '';\n                  dom.focus();\n            }\n      };\n      const [mouseEnterHandler, mouseLeaveHandler] = useHoverOnHandler(\n            setHoverOnProcedure,\n            removeHoverOnProcedure,\n            \"hover-on-add\");\n      return (\n            <div className='Add'>\n                  <PointIndicator appendClass='in-add' />\n                  <CircleAdd\n                        mouseEnterHandler={mouseEnterHandler}\n                        mouseLeaveHandler={mouseLeaveHandler}\n                        handler={handleClick} />\n                  <Cross appendClass='in-add' />\n            </div>\n      )\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n      tagSessionList: state.tagSessionList\n});\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n      addPointProcedure: (pointValue, tagSessionList) => {\n            // add point from input string\n            // add tags in session list to this point\n            dispatch(addPoint(pointValue, tagSessionList));\n      },\n      setHoverOnProcedure: (target) => {\n            dispatch(setHoverOn(target));\n      },\n      removeHoverOnProcedure: () => {\n            dispatch(removeHoverOn());\n      }\n});\n\nexport default connect(\n      mapStateToProps,\n      mapDispatchToProps\n)(Add);","import React, { useCallback } from 'react';\nimport './style.scss';\n\nimport CircleAdd from '../../common/CircleAdd/CircleAdd';\nimport Cross from '../../common/Cross/Cross';\n\nimport { connect } from 'react-redux';\nimport { addTag, setHoverOn, removeHoverOn } from '../../../redux/actions/actions';\n\nimport { getInputDom } from '../../../utils/domHolder';\nimport { trim } from '../../../utils/dev/lib';\nimport useHoverOnHandler from '../../../hooks/useHoverOnHandler';\n\nconst AddTag = (props) => {\n      const {\n            addTagProcedure,\n            setHoverOnProcedure,\n            removeHoverOnProcedure\n      } = props;\n\n      const handleClick = useCallback((e) => {\n            const dom = getInputDom();\n            const inputValue = trim(dom.value);\n            if (inputValue) {\n                  addTagProcedure(inputValue);\n                  dom.value = '';\n                  dom.focus();\n            }\n      }, [addTagProcedure]);\n\n      const [mouseEnterHandler, mouseLeaveHandler] = useHoverOnHandler(\n            setHoverOnProcedure,\n            removeHoverOnProcedure,\n            \"hover-on-add-tag\");\n      return (\n            <div className='AddTag'>\n                  <CircleAdd\n                        mouseEnterHandler={mouseEnterHandler}\n                        mouseLeaveHandler={mouseLeaveHandler}\n                        handler={handleClick} />\n                  <Cross appendClass='in-add' />\n            </div>\n      )\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n\n});\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n      addTagProcedure: (value) => {\n            dispatch(addTag(value));\n      },\n      setHoverOnProcedure: (target) => {\n            dispatch(setHoverOn(target));\n      },\n      removeHoverOnProcedure: () => {\n            dispatch(removeHoverOn());\n      }\n});\n\nexport default connect(\n      mapStateToProps,\n      mapDispatchToProps\n)(AddTag);","import React from 'react';\nimport './style.scss';\n\nconst CircleSearch = (props) => {\n      const { clickHandler, children, mouseEnterHandler, mouseLeaveHandler, isSearchUnfinished, isSearchTag } = props;\n      let className = \"CircleSearch\";\n      if (isSearchTag) {\n            className += \" search-tag\";\n      } else {\n            className = isSearchUnfinished ? 'CircleSearch search-unfinished' : \"CircleSearch search-finished\";\n      }\n      return (\n            <div className={className} onClick={clickHandler} onMouseEnter={mouseEnterHandler} onMouseLeave={mouseLeaveHandler}>\n                  {children}\n            </div>\n      )\n}\nexport default CircleSearch;","import {\n      getInputDom\n} from '../utils/domHolder';\n\nconst useHandleClickSearchPoint = (sourceList, tagListMustContained, processResultProcedure, isSearchUnfinished) => {\n      const handleClickSearch = (e) => {\n            // get value from input dom\n            const dom = (getInputDom());\n            const stringForSearching = dom.value.toLowerCase();\n            dom.select();\n\n            let needCheckTitle = false,\n                  needCheckTagList = false;\n\n            if (stringForSearching) {\n                  needCheckTitle = true;\n            }\n            if (tagListMustContained.length > 0) {\n                  needCheckTagList = true;\n            }\n\n            if (needCheckTitle || needCheckTagList) {\n                  // find point in point list\n                  const searchResult = sourceList.filter((point, i, arr) => {\n                        let isTitleMatched;\n                        let isContainAllTheTagList;\n                        const isThisPointFinished = point.status;\n\n                        if (needCheckTitle) {\n                              isTitleMatched = point.point.toLowerCase().indexOf(stringForSearching) > -1;\n                        }\n\n                        if (needCheckTagList) {\n                              isContainAllTheTagList = true;\n                              let ri = tagListMustContained.length;\n                              while (ri--) { // through all tag must contained\n                                    const currentTagId = tagListMustContained[ri].id;\n\n                                    // through all tag of this point\n                                    let rj = point.tagList.length;\n                                    let isThisTagExistedInThisPointTagList = false;\n                                    while (rj--) {\n                                          if (point.tagList[rj].id === currentTagId) {\n                                                isThisTagExistedInThisPointTagList = true;\n                                                break;\n                                          }\n                                    }\n                                    if (!isThisTagExistedInThisPointTagList) {\n                                          isContainAllTheTagList = false;\n                                          break;\n                                    }\n                              }\n                        }\n\n                        let result = false;\n\n                        if (needCheckTitle && needCheckTagList) {\n                              result = isTitleMatched && isContainAllTheTagList;\n                        } else if (needCheckTitle) { // is search\n                              result = isTitleMatched;\n                        } else if (needCheckTagList) {\n                              result = isContainAllTheTagList;\n                        }\n\n                        if (isSearchUnfinished) {\n                              result = result && !isThisPointFinished;\n                        } else {\n                              result = result && isThisPointFinished;\n                        }\n\n                        return result;\n                  });\n                  // if find, move the point to point session list\n                  if (searchResult.length > 0) {\n                        processResultProcedure(searchResult);\n                  }\n            }\n      };\n\n      return handleClickSearch;\n};\n\nexport default useHandleClickSearchPoint;","import React from 'react';\nimport './style.scss';\n\nimport PointIndicator from '../../common/PointIndicator/PointIndicator';\nimport CircleSearch from '../../common/CircleSearch/CircleSearch';\nimport useHandleClickSearchPoint from '../../../hooks/useHandleClickSearchPoint';\n\nimport { connect } from 'react-redux';\nimport { movePointListToSessionList, setHoverOn, removeHoverOn } from '../../../redux/actions/actions';\n\nimport useHoverOnHandler from '../../../hooks/useHoverOnHandler';\n\nconst Search = (props) => {\n      const { pointList, tagSessionList, movePointListToSessionProcedure, isSearchUnfinished, setHoverOnProcedure, removeHoverOnProcedure } = props;\n      const handleClickSearch = useHandleClickSearchPoint(pointList, tagSessionList, movePointListToSessionProcedure, isSearchUnfinished);\n      const hoverOnString = isSearchUnfinished ? \"hover-on-search-unfinished\" : \"hover-on-search-finished\";\n      const [mouseEnterHandler, mouseLeaveHandler] = useHoverOnHandler(setHoverOnProcedure, removeHoverOnProcedure, hoverOnString);\n      return (\n            <div className='Search'>\n                  <CircleSearch\n                        isSearchUnfinished={isSearchUnfinished}\n                        mouseEnterHandler={mouseEnterHandler}\n                        mouseLeaveHandler={mouseLeaveHandler}\n                        clickHandler={handleClickSearch}>\n                        <PointIndicator appendClass='in-search' pointStatus={!isSearchUnfinished} />\n                  </CircleSearch>\n                  <div className=\"radar\"></div>\n            </div>\n      )\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n      pointList: state.pointList,\n      tagSessionList: state.tagSessionList\n});\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n      movePointListToSessionProcedure: (searchedPointList) => {\n            dispatch(movePointListToSessionList(searchedPointList));\n      },\n      setHoverOnProcedure: (target) => {\n            dispatch(setHoverOn(target));\n      },\n      removeHoverOnProcedure: () => {\n            dispatch(removeHoverOn());\n      }\n});\n\nexport default connect(\n      mapStateToProps,\n      mapDispatchToProps\n)(Search);","import {\n      getInputDom\n} from '../utils/domHolder';\n\nconst useHandleClickSearchTag = (sourceList, processResultProcedure) => {\n      const handleClickSearch = (e) => {\n            // get value from input dom\n            const dom = getInputDom();\n            const stringForSearching = dom.value.toLowerCase();\n            dom.select();\n\n            // find tag in tag list\n            if (stringForSearching) {\n                  const searchResult = sourceList.filter((tag, i, arr) => {\n                        return tag.tag.toLowerCase().indexOf(stringForSearching) > -1;\n                  });\n                  // if find, move the tag to tag session list\n                  if (searchResult.length > 0) {\n                        processResultProcedure(searchResult);\n                  }\n            }\n      };\n\n      return handleClickSearch;\n};\n\nexport default useHandleClickSearchTag;","import React from 'react';\nimport './style.scss';\n\nimport CircleSearch from '../../common/CircleSearch/CircleSearch';\nimport Cross from '../../common/Cross/Cross';\nimport useHandleClickSearchTag from '../../../hooks/useHandleClickSearchTag';\n\nimport { connect } from 'react-redux';\nimport { moveTagListToSessionList, setHoverOn, removeHoverOn } from '../../../redux/actions/actions';\nimport useHoverOnHandler from '../../../hooks/useHoverOnHandler';\n\nconst SearchTag = (props) => {\n      const { tagList, processResultProcedure, setHoverOnProcedure, removeHoverOnProcedure } = props;\n      const handleClickSearchTag = useHandleClickSearchTag(tagList, processResultProcedure);\n      const [mouseEnterHandler, mouseLeaveHandler] = useHoverOnHandler(setHoverOnProcedure, removeHoverOnProcedure, \"hover-on-search-tag\");\n      return (\n            <div className='SearchTag'>\n                  <CircleSearch\n                        isSearchTag={true}\n                        mouseEnterHandler={mouseEnterHandler}\n                        mouseLeaveHandler={mouseLeaveHandler}\n                        clickHandler={handleClickSearchTag} >\n                        <Cross appendClass='in-search' />\n                  </CircleSearch>\n                  <div className=\"radar\"></div>\n            </div>\n      )\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n      tagList: state.tagList\n});\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n      processResultProcedure: (matchedTagList) => {\n            dispatch(moveTagListToSessionList(matchedTagList));\n      },\n      setHoverOnProcedure: (target) => {\n            dispatch(setHoverOn(target));\n      },\n      removeHoverOnProcedure: () => {\n            dispatch(removeHoverOn());\n      }\n});\n\nexport default connect(\n      mapStateToProps,\n      mapDispatchToProps\n)(SearchTag);","import CryptoJS from 'crypto-js';\n\nconst key = CryptoJS.enc.Utf8.parse(\"Aresun\");\nconst iv = CryptoJS.enc.Utf8.parse('ABCDEF1234123412');\n\nexport function Encrypt(text) {\n      return CryptoJS.AES.encrypt(text, CryptoJS.enc.Utf8.parse(key), {\n            iv: CryptoJS.enc.Utf8.parse(iv),\n            mode: CryptoJS.mode.CBC,\n            padding: CryptoJS.pad.Pkcs7\n      }).toString()\n}\n\nexport function Decrypt(text) {\n      let decrypted = CryptoJS.AES.decrypt(text, CryptoJS.enc.Utf8.parse(key), {\n            iv: CryptoJS.enc.Utf8.parse(iv),\n            mode: CryptoJS.mode.CBC,\n            padding: CryptoJS.pad.Pkcs7\n      })\n      return decrypted.toString(CryptoJS.enc.Utf8)\n}","import React from 'react';\nimport './style.scss';\n\nimport { connect } from 'react-redux';\n\nimport { Encrypt } from '../../../utils/encrypt';\nimport { copyStringToClipboard } from '../../../utils/clipboard';\nimport useHoverOnHandler from '../../../hooks/useHoverOnHandler';\nimport { setHoverOn, removeHoverOn } from '../../../redux/actions/actions';\n\nconst Clipboard = (props) => {\n      // get ui data: tagList & pointList from store\n      const { tagList, pointList, setHoverOnProcedure, removeHoverOnProcedure } = props;\n\n      const handleClick = (e) => {\n            // transfrom to json string\n            const data = Encrypt(JSON.stringify({\n                  tagList,\n                  pointList\n            }));\n            // sent string to clipboard\n            copyStringToClipboard(data);\n      };\n\n      const [mouseEnterHandler, mouseLeaveHandler] = useHoverOnHandler(setHoverOnProcedure, removeHoverOnProcedure, \"hover-on-clipboard\");\n\n      return (\n            <div\n                  className='Clipboard'\n                  onMouseEnter={mouseEnterHandler}\n                  onMouseLeave={mouseLeaveHandler}\n                  onClick={handleClick}>\n                  <div className=\"tag-circle\"></div>\n                  <div className=\"point-circle\"></div>\n            </div>\n      )\n}\nconst mapStateToProps = (state, ownProps) => ({\n      tagList: state.tagList,\n      pointList: state.pointList\n});\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n      setHoverOnProcedure: (target) => {\n            dispatch(setHoverOn(target));\n      },\n      removeHoverOnProcedure: () => {\n            dispatch(removeHoverOn());\n      }\n});\n\nexport default connect(\n      mapStateToProps,\n      mapDispatchToProps\n)(Clipboard);","import React from 'react';\nimport './style.scss';\nimport { getInputDom } from '../../../utils/domHolder';\nimport { trim } from '../../../utils/dev/lib';\n\nimport { connect } from 'react-redux';\nimport { appendStringDataToSession, setHoverOn, removeHoverOn } from '../../../redux/actions/actions';\nimport { Decrypt } from '../../../utils/encrypt';\nimport useHoverOnHandler from '../../../hooks/useHoverOnHandler';\n\nconst Append = (props) => {\n      const { appendDataToSessionProcedure, setHoverOnProcedure, removeHoverOnProcedure } = props;\n\n      const handleClick = (e) => {\n            // get data string from input dom\n            const inputString = trim(getInputDom().value);\n            let dataObject;\n            if (inputString) {\n                  const decrypted = Decrypt(inputString);\n                  try {\n                        dataObject = JSON.parse(decrypted);\n                  } catch (err) {\n                        console.log('err', err);\n                  }\n            }\n            if (dataObject) {\n                  const { tagList, pointList } = dataObject;\n                  const isArray = Array.isArray;\n\n                  tagList && isArray(tagList) && pointList && isArray(pointList) && appendDataToSessionProcedure(tagList, pointList);\n            }\n      };\n      const [mouseEnterHandler, mouseLeaveHandler] = useHoverOnHandler(setHoverOnProcedure, removeHoverOnProcedure, \"hover-on-append\");\n\n      return (\n            <div\n                  className='Append'\n                  onMouseEnter={mouseEnterHandler}\n                  onMouseLeave={mouseLeaveHandler}\n                  onClick={handleClick} >\n                  <div className=\"data-box\"></div>\n                  <div className=\"append-box\"></div>\n            </div>\n      )\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n\n});\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n      appendDataToSessionProcedure: (tagList, pointList) => {\n            dispatch(appendStringDataToSession(tagList, pointList));\n      },\n      setHoverOnProcedure: (target) => {\n            dispatch(setHoverOn(target));\n      },\n      removeHoverOnProcedure: () => {\n            dispatch(removeHoverOn());\n      }\n});\n\nexport default connect(\n      mapStateToProps,\n      mapDispatchToProps\n)(Append);","import React from 'react';\nimport './style.scss';\n\nimport { connect } from 'react-redux';\n\nimport { getInputDom } from '../../../../utils/domHolder';\nimport useHoverOnHandler from '../../../../hooks/useHoverOnHandler';\nimport { setHoverOn, removeHoverOn } from '../../../../redux/actions/actions';\n\nconst HighlightCircle = (props) => {\n      const { setHoverOnProcedure, removeHoverOnProcedure } = props;\n      const handleClick = (e) => {\n            const dom = getInputDom();\n            dom.value = dom.value + \"{}\";\n            dom.focus();\n      };\n      const [mouseEnterHandler, mouseLeaveHandler] = useHoverOnHandler(setHoverOnProcedure, removeHoverOnProcedure, \"hover-on-append-highlight-format\");\n      return (\n            <div\n                  className='HighlightCircle'\n                  onMouseEnter={mouseEnterHandler}\n                  onMouseLeave={mouseLeaveHandler}\n                  onClick={handleClick}>\n                  {\"{ }\"}\n            </div>\n      );\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n\n});\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n      setHoverOnProcedure: (target) => {\n            dispatch(setHoverOn(target));\n      },\n      removeHoverOnProcedure: () => {\n            dispatch(removeHoverOn());\n      }\n});\n\nexport default connect(\n      mapStateToProps,\n      mapDispatchToProps\n)(HighlightCircle); ","import React from 'react';\nimport './style.scss';\n\nimport HighlightCircle from './HighlightCircle/HighlightCircle';\n\nconst HighlightInput = (props) => {\n      return (\n            <div className='HighlightInput'>\n                  <HighlightCircle />\n            </div>\n      );\n}\nexport default HighlightInput;","import React from 'react';\n\nimport './style.scss';\n\nimport Indicator from './Indicator/Indicator';\nimport Input from './Input/Input';\nimport Clear from './Clear/Clear';\nimport Copy from './Copy/Copy';\nimport Add from './Add/Add';\nimport AddTag from './AddTag/AddTag';\nimport Search from './Search/Search';\nimport SearchTag from './SearchTag/SearchTag';\nimport Clipboard from './Clipboard/Clipboard';\nimport Append from './Append/Append';\nimport HighlightInput from './HighlightInput/HighlightInput';\n\nimport { connect } from 'react-redux';\n\nfunction InputControls(props) {\n      const { isHoverOnSwitchUI, isHidden } = props;\n\n      let className = \"InputControls\";\n      (isHoverOnSwitchUI || isHidden) && (className += \" hidden\");\n\n      return (\n            <div className={className}>\n                  <div>\n                        <Indicator />\n                        <Input />\n                        <Clear />\n                        <Copy />\n                  </div>\n                  <div>\n                        <AddTag />\n                        <Add />\n                        <HighlightInput />\n                        <Search isSearchUnfinished={true} />\n                        <Search isSearchUnfinished={false} />\n                        <SearchTag />\n                  </div>\n                  <div>\n                        <Clipboard />\n                        <Append />\n                  </div>\n            </div>);\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n      isHoverOnSwitchUI: state.hoverOn === \"hover-on-switch-ui\",\n      isHidden: state.switchUIstatus\n});\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n\n});\n\nexport default connect(\n      mapStateToProps,\n      mapDispatchToProps\n)(InputControls);","import React from 'react';\nimport './style.scss';\n\nconst TagCross = (props) => {\n      return (\n            <div className='TagCross'>\n                  <div className=\"horizontal\"></div>\n                  <div className=\"vertical\"></div>\n            </div>\n      );\n}\nexport default TagCross;","import React, { useCallback } from 'react';\nimport './style.scss';\n\nimport TagCross from './TagCross/TagCross';\n\nconst Tag = (props) => {\n      const { tag, handler } = props;\n      const handleClick = useCallback((e) => {\n            handler(tag);\n      }, [handler, tag]);\n\n      return (\n            <div className='Tag' onClick={handleClick}>\n                  <TagCross />\n                  <span>\n                        {tag.tag}\n                  </span>\n            </div>\n      );\n}\nexport default Tag;","import React from 'react';\nimport './style.scss';\n\nconst PageBoard = (props) => {\n      const { handleClickTop, handleClickBottom } = props;\n\n      return (\n            <div className=\"PageBoard\">\n                  <div className=\"previous\" onClick={handleClickTop}></div>\n                  <div className=\"next\" onClick={handleClickBottom}></div>\n            </div>\n      );\n}\nexport default PageBoard;","/**-----------------------------------------------------------------------------------------------\n * + get max page number\n * @returns max page number: start from 1\n * -----------------------------------------------------------------------------------------------\n */\nexport const getMaxPageNumber = (theList, lengthOfOnePage) => {\n      let maxPage = Math.ceil(theList.length / lengthOfOnePage); // 0 - max page number\n      maxPage = maxPage === 0 ?\n            1 :\n            maxPage; // max page number: start from 1 now\n      return maxPage;\n};\n/**-----------------------------------------------------------------------------------------------\n * + use when jump to the page\n * -----------------------------------------------------------------------------------------------\n */\nexport const isPageNumberInRange = (targetPage, maxPage) => {\n      return targetPage > 0 && targetPage <= maxPage;\n};\n/**-----------------------------------------------------------------------------------------------\n * + get new list by page number & length\n * before get call function: isPageNumberInRange()\n * -----------------------------------------------------------------------------------------------\n */\nexport const getListByPage = (theList, pageTo, lengthOfOnePage) => {\n      const end = pageTo * lengthOfOnePage;\n      const start = end - lengthOfOnePage;\n\n      return theList.slice(start, end);\n};","import {\n      useState,\n      useEffect\n} from 'react';\n\nimport {\n      getMaxPageNumber,\n      getListByPage,\n      isPageNumberInRange\n} from '../utils/getListByPage';\n\nconst usePagedList = (sourceList) => {\n      const [page, setPage] = useState(1); // 1 - any\n\n      const lengthOfOnePage = 15; // amount of points in one page\n      const maxPage = getMaxPageNumber(sourceList, lengthOfOnePage);\n      const pagedPointList = getListByPage(sourceList, page, lengthOfOnePage);\n\n      useEffect(() => {\n            if (page > maxPage) {\n                  setPage(maxPage);\n            }\n            return () => {\n\n            };\n      }, [page, maxPage]);\n\n      const handleClickTop = (e) => {\n            const pageToJump = page - 1;\n            isPageNumberInRange(pageToJump, maxPage) && setPage(pageToJump);\n      };\n      const handleClickBottom = (e) => {\n            const pageToJump = page + 1;\n            isPageNumberInRange(pageToJump, maxPage) && setPage(pageToJump);\n\n      };\n\n      return [pagedPointList, handleClickTop, handleClickBottom];\n};\n\nexport default usePagedList;","import React from 'react';\nimport './style.scss';\n\nimport Tag from '../../common/Tag/Tag';\nimport PageBoard from '../../common/PageBoard/PageBoard';\n\nimport { connect } from 'react-redux';\nimport { moveTagToSession } from '../../../redux/actions/actions';\nimport usePagedList from '../../../hooks/usePagedList';\n\nconst TagList = (props) => {\n      const { tagList, moveTagToSessionProcedure, isHoverOnAddTag, isHoverOnSearchTag, isHoverOnClipboard, isHoverOnAppend, isHoverOnToUI, isHoverOnToStorage } = props;\n      const [pagedPointList, handleClickTop, handleClickBottom] = usePagedList(tagList);\n\n      let className = \"TagList\";\n      isHoverOnSearchTag && (className = \"TagList ready-to-tag-session\");\n      isHoverOnClipboard && (className = \"TagList ready-to-clipboard\");\n      isHoverOnAppend && (className = \"TagList ready-to-append\");\n      isHoverOnToStorage && (className = \"TagList ready-to-storage\");\n\n      return (\n            <div className={className}>\n                  <div style={{ position: \"relative\" }}>\n                        <div className={isHoverOnAddTag ? \"hidden-tag show\" : \"hidden-tag\"}></div>\n                        <div className={isHoverOnToUI ? \"flush-board show\" : \"flush-board\"}></div>\n                        <div className=\"tag-list-holder\">\n                              <div className={isHoverOnToStorage ? \"hidden-storage-board show\" : \"hidden-storage-board\"}></div>\n                              {pagedPointList.map((tag, i, arr) => (<Tag tag={tag} key={tag.id} handler={moveTagToSessionProcedure} />))}\n                        </div>\n                  </div>\n                  <PageBoard handleClickTop={handleClickTop} handleClickBottom={handleClickBottom} />\n            </div>\n      );\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n      tagList: state.tagList,\n      isHoverOnAddTag: state.hoverOn === \"hover-on-add-tag\",\n      isHoverOnSearchTag: state.hoverOn === \"hover-on-search-tag\",\n      isHoverOnClipboard: state.hoverOn === \"hover-on-clipboard\",\n      isHoverOnAppend: state.hoverOn === \"hover-on-append\",\n      isHoverOnToUI: state.hoverOn === \"hover-on-to-ui\",\n      isHoverOnToStorage: state.hoverOn === \"hover-on-to-storage\"\n});\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n      moveTagToSessionProcedure: (tag) => {\n            dispatch(moveTagToSession(tag));\n      }\n});\n\nexport default connect(\n      mapStateToProps,\n      mapDispatchToProps\n)(TagList);","import React from 'react';\nimport './style.scss';\n\nconst Return = (props) => {\n      const { handler, handleEnter, handleLeave } = props;\n      const handleClick = (e) => {\n            handler && handler();\n      }\n      const enterHandler = (e) => {\n            handleEnter && handleEnter();\n      };\n      const leaveHandler = (e) => {\n            handleLeave && handleLeave();\n      };\n      return (\n            <div\n                  className='Return'\n                  onMouseEnter={enterHandler}\n                  onMouseLeave={leaveHandler}\n                  onClick={handleClick}>\n            </div>\n      );\n}\nexport default Return;","import React from 'react';\nimport './style.scss';\n\nconst RemoveSession = (props) => {\n      const { handler, handleEnter, handleLeave } = props;\n      const handleClick = (e) => {\n            handler && handler();\n      }\n      const enterHandler = (e) => {\n            handleEnter && handleEnter();\n      };\n      const leaveHandler = (e) => {\n            handleLeave && handleLeave();\n      };\n\n      return (\n            <div\n                  className='RemoveSession'\n                  onMouseEnter={enterHandler}\n                  onMouseLeave={leaveHandler}\n                  onClick={handleClick} >\n            </div>\n      );\n}\nexport default RemoveSession;","import React from 'react';\nimport './style.scss';\n\nimport Return from './Return/Return';\nimport RemoveSession from './RemoveSession/RemoveSession';\n\nconst SessionControl = (props) => {\n      const {\n            removeHandler,\n            returnHandler,\n            handleEnterReturn,\n            handleLeaveReturn,\n            handleEnterRemoveSession,\n            handleLeaveRemoveSession\n      } = props;\n\n      return (\n            <div className='SessionControl'>\n                  <Return\n                        handler={returnHandler}\n                        handleEnter={handleEnterReturn}\n                        handleLeave={handleLeaveReturn}\n                  />\n                  <RemoveSession\n                        handleEnter={handleEnterRemoveSession}\n                        handleLeave={handleLeaveRemoveSession}\n                        handler={removeHandler} />\n            </div>\n      );\n}\nexport default SessionControl;","const useReturnSessionHandler = (procedure, sessionList) => {\n      const returnHandler = () => {\n            procedure(sessionList);\n      };\n      return returnHandler;\n};\nexport default useReturnSessionHandler;","import {\n      useState\n} from 'react';\n\nexport const useHandleEnterLeaveReturn = () => {\n      const [readyToReturn, setReadyToReturn] = useState(false);\n\n      const handleEnterReturn = () => {\n            setReadyToReturn(true);\n      };\n      const handleLeaveReturn = () => {\n            setReadyToReturn(false);\n      };\n\n      return [readyToReturn, handleEnterReturn, handleLeaveReturn];\n};","import {\n      useState\n} from 'react';\n\nexport const useHandleEnterLeaveRemoveSession = () => {\n      const [readyToRemoveSession, setReadyToRemoveSession] = useState(false);\n\n      const handleEnterRemoveSession = () => {\n            setReadyToRemoveSession(true);\n      };\n      const handleLeaveRemoveSession = () => {\n            setReadyToRemoveSession(false);\n      };\n\n      return [readyToRemoveSession, handleEnterRemoveSession, handleLeaveRemoveSession];\n};","import React from 'react';\nimport './style.scss';\n\nimport Tag from '../../common/Tag/Tag';\nimport PageBoard from '../../common/PageBoard/PageBoard';\nimport SessionControl from '../../common/SessionControl/SessionControl';\n\nimport { connect } from 'react-redux';\nimport { returnThisTag, returnWholeTagSession, clearTagSession } from '../../../redux/actions/actions';\nimport useReturnSessionHandler from '../../../hooks/useReturnSessionHandler';\nimport usePagedList from '../../../hooks/usePagedList';\nimport { useHandleEnterLeaveReturn } from '../../../hooks/useHandleEnterLeaveRetrun';\nimport { useHandleEnterLeaveRemoveSession } from '../../../hooks/useHandleEnterLeaveRemoveSession';\n\nconst TagSession = (props) => {\n      const { tagSessionList,\n            returnThisTagProcedure,\n            returnWholeSessionProcedure,\n            removeSessionProcedure,\n            isHoverOnClipboard,\n            isHoverOnAppend,\n            isHoverOnToStorage\n      } = props;\n      const returnHandler = useReturnSessionHandler(returnWholeSessionProcedure, tagSessionList);\n      const [pagedList, handleClickTop, handleClickBottom] = usePagedList(tagSessionList);\n\n      let className = \"TagSession\";\n      isHoverOnClipboard && (className = \"TagSession hide-for-clipboard\");\n      isHoverOnAppend && (className = \"TagSession ready-for-append\");\n      isHoverOnToStorage && (className = \"TagSession ready-for-to-storage\");\n\n      const [readyToReturn, handleEnterReturn, handleLeaveReturn] = useHandleEnterLeaveReturn();\n      const [readyToRemoveSession, handleEnterRemoveSession, handleLeaveRemoveSession] = useHandleEnterLeaveRemoveSession();\n      let classNameOfListHolder = \"tag-session-list-holder\";\n      readyToReturn && (classNameOfListHolder += \" ready-to-return\");\n      readyToRemoveSession && (classNameOfListHolder += \" ready-to-remove-session\");\n\n      return (\n            <div className={className}>\n                  <PageBoard handleClickTop={handleClickTop} handleClickBottom={handleClickBottom} />\n                  <div className={classNameOfListHolder}>\n                        {pagedList.map((tag, i, arr) => (<Tag tag={tag} key={tag.id} handler={returnThisTagProcedure} />))}\n                        <div className=\"hidden-append-box\"></div>\n                  </div>\n                  <SessionControl\n                        returnHandler={returnHandler}\n                        handleEnterReturn={handleEnterReturn}\n                        handleLeaveReturn={handleLeaveReturn}\n                        handleEnterRemoveSession={handleEnterRemoveSession}\n                        handleLeaveRemoveSession={handleLeaveRemoveSession}\n                        removeHandler={removeSessionProcedure} />\n            </div>\n      );\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n      tagSessionList: state.tagSessionList,\n      isHoverOnClipboard: state.hoverOn === \"hover-on-clipboard\",\n      isHoverOnAppend: state.hoverOn === \"hover-on-append\",\n      isHoverOnToStorage: state.hoverOn === \"hover-on-to-storage\"\n});\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n      returnThisTagProcedure: (tag) => {\n            dispatch(returnThisTag(tag));\n      },\n      returnWholeSessionProcedure: (tagSessionList) => {\n            dispatch(returnWholeTagSession(tagSessionList))\n      },\n      removeSessionProcedure: () => {\n            dispatch(clearTagSession());\n      }\n});\n\nexport default connect(\n      mapStateToProps,\n      mapDispatchToProps\n)(TagSession);","import React from 'react';\nimport './style.scss';\n\nimport { connect } from 'react-redux';\nimport { removeHoverOn, setHoverOn, setClickableEjectBoard, setSwitchUIstatus } from '../../../redux/actions/actions';\nimport useHoverOnHandler from '../../../hooks/useHoverOnHandler';\n\nconst SwitchUI = (props) => {\n      const { setHoverOnProcedure, removeHoverOnProcedure, isHoverOnSwitchUI, turnOffEjectBoardProcedure, isSelfOn, toggleSwitchUIstatusProcedure } = props;\n\n      let className = \"SwitchUI\";\n      isSelfOn && (className += \" on\");\n      !isSelfOn && isHoverOnSwitchUI && (className += \" ready-to-turn-on\");\n      isSelfOn && isHoverOnSwitchUI && (className += \" ready-to-turn-off\");\n\n      const [mouseEnterHandler, mouseLeaveHandler] = useHoverOnHandler(setHoverOnProcedure, removeHoverOnProcedure, \"hover-on-switch-ui\");\n      const handleClick = (e) => {\n            turnOffEjectBoardProcedure();\n            toggleSwitchUIstatusProcedure(!isSelfOn);\n      };\n      return (\n            <div\n                  onMouseEnter={mouseEnterHandler}\n                  onMouseLeave={mouseLeaveHandler}\n                  onClick={handleClick}\n                  className={className}>\n                  <div className=\"side-box\"></div>\n                  <div className=\"switch-pool\"></div>\n                  <div className=\"side-box\"></div>\n            </div>\n      );\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n      isHoverOnSwitchUI: state.hoverOn === \"hover-on-switch-ui\",\n      isSelfOn: state.switchUIstatus\n});\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n      setHoverOnProcedure: (target) => {\n            dispatch(setHoverOn(target));\n      },\n      removeHoverOnProcedure: () => {\n            dispatch(removeHoverOn());\n      },\n      turnOffEjectBoardProcedure: () => {\n            dispatch(setClickableEjectBoard(false));\n      },\n      toggleSwitchUIstatusProcedure: (targetStatus) => {\n            dispatch(setSwitchUIstatus(targetStatus));\n      }\n});\n\nexport default connect(\n      mapStateToProps,\n      mapDispatchToProps\n)(SwitchUI); ","import React from 'react';\nimport './style.scss';\n\nconst TagBelong = (props) => {\n      const { tagString } = props;\n      return (\n            <div className='TagBelong'>\n                  {tagString}\n            </div>\n      );\n}\nexport default TagBelong;","import React from 'react';\nimport './style.scss';\n\nimport TagBelong from './TagBelong/TagBelong';\nimport { connect } from 'react-redux';\n\nconst TagBelongList = (props) => {\n      const { tagBelongList } = props;\n      return (\n            <div className='TagBelongList'>\n                  <div>\n                        {tagBelongList.map((tag, i, arr) => (<TagBelong tagString={tag.tag} key={tag.id} />))}\n                  </div>\n            </div>\n      );\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n      tagBelongList: state.tagBelongList\n});\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n\n});\n\nexport default connect(\n      mapStateToProps,\n      mapDispatchToProps\n)(TagBelongList);","import React from 'react';\nimport './style.scss';\n\nimport PointIndicator from '../PointIndicator/PointIndicator';\n\nimport { connect } from 'react-redux';\n\nconst Point = (props) => {\n      const {\n            point,\n            handler,\n            appendClass,\n            toggleHandler,\n            mouseEnterHandler,\n            mouseLeaveHandler,\n            isHoverOnSeachUnfinished,\n            isHoverOnSeachFinished\n      } = props;\n      const handleClick = (e) => {\n            handler && handler(point);\n      };\n      const handleClickIndicator = () => {\n            toggleHandler && toggleHandler(point);\n      };\n      const handleMouseEnter = (e) => {\n            mouseEnterHandler && mouseEnterHandler(point);\n      };\n      const handleMouseLeave = (e) => {\n            mouseLeaveHandler && mouseLeaveHandler(point);\n      };\n\n      let className = appendClass ? \"Point \" + appendClass : \"Point\";\n      \n      if (appendClass === \"in-list\") {\n            isHoverOnSeachUnfinished && point.status === false && (className += \" ready-to-session-list\");\n            isHoverOnSeachFinished && point.status === true && (className += \" ready-to-session-list\");\n      }\n\n      let pointInnerHtml = point.point.replace(/\\{([^{}]*)\\}/g, (match, $1) => {\n            return `<span class=\"highlight\">${$1}</span>`;\n      });\n      pointInnerHtml = pointInnerHtml.replace(/\\*([^*]*)\\*/g, (match, $1) => {\n            return `<span class=\"bold\">${$1}</span>`;\n      });\n      return (\n            <div className={className} title={point.point} onMouseEnter={handleMouseEnter} onMouseLeave={handleMouseLeave}>\n                  <PointIndicator appendClass='in-point' handler={handleClickIndicator} pointStatus={point.status} />\n                  <span onClick={handleClick} dangerouslySetInnerHTML={{ __html: pointInnerHtml }} ></span>\n            </div>\n      );\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n      isHoverOnSeachUnfinished: state.hoverOn === \"hover-on-search-unfinished\",\n      isHoverOnSeachFinished: state.hoverOn === \"hover-on-search-finished\"\n});\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n\n});\n\nexport default connect(\n      mapStateToProps,\n      mapDispatchToProps\n)(Point);","const useHoverHandlerOnPoint = (overrideTagBelongListProcedure, clearTagBelongListProcedure) => {\n      const mouseEnterHandler = (point) => {\n            overrideTagBelongListProcedure(point);\n      };\n      const mouseLeaveHandler = (point) => {\n            clearTagBelongListProcedure(point);\n      };\n\n      return [mouseEnterHandler, mouseLeaveHandler];\n};\nexport default useHoverHandlerOnPoint;","import React from 'react';\nimport './style.scss';\n\nimport Point from '../../common/Point/Point';\n\nimport { connect } from 'react-redux';\nimport { movePointToSession, overrideTagBelongList, clearTagBelongList } from '../../../redux/actions/actions';\n\nimport PageBoard from '../../common/PageBoard/PageBoard';\nimport usePagedList from '../../../hooks/usePagedList';\nimport useHoverHandlerOnPoint from '../../../hooks/useHoverHandlerOnPoint';\n\nconst PointList = (props) => {\n      const { pointList, movePointToSessionProcedure, overrideTagBelongListProcedure, clearTagBelongListProcedure,\n            isHoverOnAddPoint, isHoverOnClipboard, isHoverOnAppend, isHoverOnToUI, isHoverOnToStorage } = props;\n      const [pagedPointList, handleClickTop, handleClickBottom] = usePagedList(pointList);\n      const [mouseEnterHandler, mouseLeaveHandler] = useHoverHandlerOnPoint(overrideTagBelongListProcedure, clearTagBelongListProcedure);\n      let className = \"PointList\";\n      isHoverOnClipboard && (className = \"PointList ready-to-clipboard\");\n      isHoverOnAppend && (className = \"PointList ready-to-append\");\n      isHoverOnToStorage && (className = \"PointList ready-to-storage\");\n      return (\n            <div className={className}>\n                  <div style={{ position: \"relative\" }}>\n                        <div className={isHoverOnAddPoint ? \"hidden-point show\" : \"hidden-point\"}></div>\n                        <div className={isHoverOnToUI ? \"flush-board show\" : \"flush-board\"}></div>\n                        <div className=\"point-list-holder\">\n                              <div className={isHoverOnToStorage ? \"hidden-storage-board show\" : \"hidden-storage-board\"}></div>\n                              {pagedPointList.map((point, i, arr) => (\n                                    <Point\n                                          point={point}\n                                          key={point.id}\n                                          appendClass=\"in-list\"\n                                          mouseEnterHandler={mouseEnterHandler}\n                                          mouseLeaveHandler={mouseLeaveHandler}\n                                          handler={movePointToSessionProcedure} />\n                              ))}\n                        </div>\n                  </div>\n                  <PageBoard handleClickTop={handleClickTop} handleClickBottom={handleClickBottom} />\n            </div >\n      );\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n      pointList: state.pointList,\n      isHoverOnAddPoint: state.hoverOn === \"hover-on-add\",\n      isHoverOnClipboard: state.hoverOn === \"hover-on-clipboard\",\n      isHoverOnAppend: state.hoverOn === \"hover-on-append\",\n      isHoverOnToUI: state.hoverOn === \"hover-on-to-ui\",\n      isHoverOnToStorage: state.hoverOn === \"hover-on-to-storage\"\n});\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n      movePointToSessionProcedure: (point) => {\n            dispatch(movePointToSession(point));\n      },\n      overrideTagBelongListProcedure: (point) => {\n            dispatch(overrideTagBelongList(point));\n      },\n      clearTagBelongListProcedure: (point) => {\n            dispatch(clearTagBelongList());\n      }\n});\n\nexport default connect(\n      mapStateToProps,\n      mapDispatchToProps\n)(PointList);","import React from 'react';\nimport './style.scss';\n\nimport { connect } from 'react-redux';\nimport { setClickableEjectBoard } from '../../../../redux/actions/actions';\n\nconst EjectBoard = (props) => {\n      const { clickable, setClickableProcedure, isOn, isDisabled } = props;\n\n      const handleClick = (e) => {\n            if (!isDisabled && clickable) {\n                  // toggle current on/off\n                  setClickableProcedure(!isOn);\n            }\n      };\n\n      return (\n            <div\n                  className='EjectBoard'\n                  style={{\n                        backgroundColor: clickable ?\n                              isOn ? \"#430d5d\" : \"#eeeeee\"\n                              : \"transparent\"\n                  }}\n                  onClick={handleClick}>\n            </div>\n      );\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n      isDisabled: state.switchUIstatus,\n      clickable: state.pointSessionList.length > 0,\n      isOn: state.pointSessionList.length > 0 ?\n            state.ejectBoard.isOn\n            : false\n});\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n      setClickableProcedure: (targetStatus) => {\n            dispatch(setClickableEjectBoard(targetStatus))\n      }\n});\n\nexport default connect(\n      mapStateToProps,\n      mapDispatchToProps\n)(EjectBoard);","import {\n      getInputDom\n} from '../utils/domHolder';\n\nconst useClickPointHandlerOfSessionList = (\n      ejectBoardIsOn,\n      returnThisPointProcedure,\n      returnTagSessionListProcedure,\n      tagSessionList,\n      ejectThisPointProcedure\n) => {\n      let clickPointHandler;\n\n      if (!ejectBoardIsOn) {\n            clickPointHandler = (point) => {\n                  returnThisPointProcedure(point);\n            };\n      } else {\n            clickPointHandler = (point) => {\n                  // set value of input\n                  getInputDom().value = point.point;\n                  // update store\n                  returnTagSessionListProcedure(tagSessionList); // step 1\n                  ejectThisPointProcedure(point); // step 2\n            };\n      }\n      return clickPointHandler;\n};\n\nexport default useClickPointHandlerOfSessionList;","import React from 'react';\nimport './style.scss';\n\nimport Point from '../../common/Point/Point';\nimport EjectBoard from './EjectBoard/EjectBoard';\nimport SessionControl from '../../common/SessionControl/SessionControl';\nimport PageBoard from '../../common/PageBoard/PageBoard';\n\nimport { connect } from 'react-redux';\nimport {\n      returnThisPoint,\n      returnWholePointSession,\n      clearPointSession,\n      returnWholeTagSession,\n      ejectThisPoint,\n      togglePointStatusInSession,\n      overrideTagBelongList,\n      clearTagBelongList\n} from '../../../redux/actions/actions';\n\nimport usePagedList from '../../../hooks/usePagedList';\nimport useReturnSessionHandler from '../../../hooks/useReturnSessionHandler';\nimport useClickPointHandlerOfSessionList from '../../../hooks/useClickPointHandlerOfSessionList';\nimport useHoverHandlerOnPoint from '../../../hooks/useHoverHandlerOnPoint';\nimport { useHandleEnterLeaveReturn } from '../../../hooks/useHandleEnterLeaveRetrun';\nimport { useHandleEnterLeaveRemoveSession } from '../../../hooks/useHandleEnterLeaveRemoveSession';\n\nconst PointSession = (props) => {\n      const {\n            pointSessionList,\n            returnThisPointProcedure,\n            returnWholeSessionProcedure,\n            removeSessionProcedure,\n            ejectBoardIsOn,\n            ejectThisPointProcedure,\n            tagSessionList,\n            returnTagSessionListProcedure,\n            clickPointIndicatorToTogglePointStatusProcedure,\n            overrideTagBelongListProcedure,\n            clearTagBelongListProcedure,\n            isHoverOnClipboard,\n            isHoverOnAppend,\n            isHoverOnStorage\n      } = props;\n      const clickPointHandler = useClickPointHandlerOfSessionList(\n            ejectBoardIsOn,\n            returnThisPointProcedure,\n            returnTagSessionListProcedure,\n            tagSessionList,\n            ejectThisPointProcedure,\n            overrideTagBelongListProcedure,\n            clearTagBelongListProcedure,\n            isHoverOnStorage\n      );\n      const returnHandler = useReturnSessionHandler(returnWholeSessionProcedure, pointSessionList);\n      const [pagedList, handleClickTop, handleClickBottom] = usePagedList(pointSessionList);\n      const [mouseEnterHandler, mouseLeaveHandler] = useHoverHandlerOnPoint(overrideTagBelongListProcedure, clearTagBelongListProcedure);\n      let className = \"PointSession\";\n      isHoverOnClipboard && (className = \"PointSession hide-for-clipboard\");\n      isHoverOnAppend && (className = \"PointSession ready-for-append\");\n      isHoverOnStorage && (className = \"PointSession ready-for-to-storage\");\n\n      const [readyToReturn, handleEnterReturn, handleLeaveReturn] = useHandleEnterLeaveReturn();\n      const [readyToRemoveSession, handleEnterRemoveSession, handleLeaveRemoveSession] = useHandleEnterLeaveRemoveSession();\n      let classNameOfListHolder = \"point-list-holder\";\n      readyToReturn && (classNameOfListHolder += \" ready-to-return\");\n      readyToRemoveSession && (classNameOfListHolder += \" ready-to-remove-session\");\n\n      return (\n            <div className={className}>\n                  <div style={{ width: \"52px\" }}>\n                        <PageBoard handleClickTop={handleClickTop} handleClickBottom={handleClickBottom} />\n                        <EjectBoard />\n                  </div>\n                  <div style={{ position: \"relative\", width: \"360px\" }}>\n                        <div className={classNameOfListHolder}>\n                              {pagedList.map((point, i, arr) => (\n                                    <Point\n                                          point={point}\n                                          key={point.id}\n                                          appendClass=\"in-session-list\"\n                                          handler={clickPointHandler}\n                                          mouseEnterHandler={mouseEnterHandler}\n                                          mouseLeaveHandler={mouseLeaveHandler}\n                                          toggleHandler={clickPointIndicatorToTogglePointStatusProcedure}\n                                    />))}\n                        </div>\n                        <div className=\"hidden-append-box\"></div>\n                  </div>\n                  <div>\n                        <SessionControl\n                              handleEnterReturn={handleEnterReturn}\n                              handleLeaveReturn={handleLeaveReturn}\n                              handleEnterRemoveSession={handleEnterRemoveSession}\n                              handleLeaveRemoveSession={handleLeaveRemoveSession}\n                              returnHandler={returnHandler}\n                              removeHandler={removeSessionProcedure} />\n                  </div>\n            </div>\n      );\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n      pointSessionList: state.pointSessionList,\n      ejectBoardIsOn: state.ejectBoard.isOn,\n      tagSessionList: state.tagSessionList,\n      isHoverOnClipboard: state.hoverOn === \"hover-on-clipboard\",\n      isHoverOnAppend: state.hoverOn === \"hover-on-append\",\n      isHoverOnStorage: state.hoverOn === \"hover-on-to-storage\",\n});\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n      returnThisPointProcedure: (point) => {\n            dispatch(returnThisPoint(point));\n      },\n      returnWholeSessionProcedure: (pointSessionList) => {\n            dispatch(returnWholePointSession(pointSessionList));\n      },\n      removeSessionProcedure: () => {\n            dispatch(clearPointSession());\n      },\n      ejectThisPointProcedure: (point) => {\n            dispatch(ejectThisPoint(point));\n      },\n      returnTagSessionListProcedure: (tagSessionList) => {\n            dispatch(returnWholeTagSession(tagSessionList));\n      },\n      clickPointIndicatorToTogglePointStatusProcedure: (point) => {\n            dispatch(togglePointStatusInSession(point));\n      },\n      overrideTagBelongListProcedure: (point) => {\n            dispatch(overrideTagBelongList(point));\n      },\n      clearTagBelongListProcedure: (point) => {\n            dispatch(clearTagBelongList());\n      }\n});\n\nexport default connect(\n      mapStateToProps,\n      mapDispatchToProps\n)(PointSession);","import React from 'react';\nimport './style.scss';\n\nimport TagList from './TagList/TagList';\nimport TagSession from './TagSession/TagSession';\nimport SwitchUI from './SwitchUI/SwitchUI';\nimport TagBelongList from './TagBelongList/TagBelongList';\nimport PointList from './PointList/PointList';\nimport PointSession from './PointSession/PointSession';\n\nimport { connect } from 'react-redux';\n\nfunction Engine(props) {\n      const { isHoverOnErase } = props;\n      return (\n            <div className='Engine'>\n                  <div className={isHoverOnErase ? \"hidden-erase-board show\" : \"hidden-erase-board\"}></div>\n                  <div>\n                        <TagList />\n                        <TagSession />\n                  </div>\n                  <div style={{ width: \"100px\" }}>\n                        <SwitchUI />\n                  </div>\n                  <div>\n                        <TagBelongList />\n                  </div>\n                  <div>\n                        <PointList />\n                        <PointSession />\n                  </div>\n            </div>);\n}\n\n\nconst mapStateToProps = (state, ownProps) => ({\n      isHoverOnErase: state.hoverOn === \"hover-on-erase\"\n});\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n\n});\n\nexport default connect(\n      mapStateToProps,\n      mapDispatchToProps\n)(Engine);","import React from 'react';\nimport './style.scss';\n\nimport { withRouter } from \"react-router-dom\";\n\nconst Exit = (props) => {\n      const { history } = props;\n\n      const clickHandler = (e) => {\n            history.push(\"/entrance\");\n      }\n\n      return (\n            <div className='Exit'>\n                  <div className=\"circle\" onClick={clickHandler}></div>\n                  <div className=\"horizontal\"></div>\n                  <div className=\"vertical\"></div>\n            </div>\n      )\n}\nexport default withRouter(Exit);","import React from 'react';\nimport './style.scss';\n\nconst DataSpot = (props) => {\n      return (\n            <div className='DataSpot'>\n                  <div className=\"ui-spot\"></div>\n                  <div className=\"storage-spot\"></div>\n            </div>\n      )\n}\nexport default DataSpot;","import React from 'react';\nimport './style.scss';\n\nimport DataSpot from '../../common/DataSpot/DataSpot';\n\nimport { connect } from 'react-redux';\nimport { overrideTagList, overridePointList, setHoverOn, removeHoverOn } from '../../../redux/actions/actions';\nimport useHoverOnHandler from '../../../hooks/useHoverOnHandler';\n\nconst ToUI = (props) => {\n      const {\n            overrideTagListProcedure,\n            overridePointProcedure,\n            setHoverOnProcedure, removeHoverOnProcedure\n      } = props;\n\n      const handleClick = (e) => {\n            const data = JSON.parse(localStorage.getItem(\"localData\"));\n\n            data && data.tagList && overrideTagListProcedure(data.tagList);\n            data && data.pointList && overridePointProcedure(data.pointList);\n      };\n\n      const [mouseEnterHandler, mouseLeaveHandler] = useHoverOnHandler(setHoverOnProcedure, removeHoverOnProcedure, \"hover-on-to-ui\");\n\n      return (\n            <div\n                  className='ToUI'\n                  onMouseEnter={mouseEnterHandler}\n                  onMouseLeave={mouseLeaveHandler}\n                  onClick={handleClick}>\n                  <DataSpot />\n                  <div className=\"data-flow\"></div>\n            </div>\n      )\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n\n});\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n      overrideTagListProcedure: (tagList) => {\n            dispatch(overrideTagList(tagList));\n      },\n      overridePointProcedure: (pointList) => {\n            dispatch(overridePointList(pointList));\n      },\n      setHoverOnProcedure: (target) => {\n            dispatch(setHoverOn(target));\n      },\n      removeHoverOnProcedure: () => {\n            dispatch(removeHoverOn());\n      }\n});\n\nexport default connect(\n      mapStateToProps,\n      mapDispatchToProps\n)(ToUI);","import React from 'react';\nimport './style.scss';\n\nimport DataSpot from '../../common/DataSpot/DataSpot';\n\nimport { connect } from 'react-redux';\nimport { setHoverOn, removeHoverOn } from '../../../redux/actions/actions';\nimport useHoverOnHandler from '../../../hooks/useHoverOnHandler';\n\nconst ToStorage = (props) => {\n      const { tagList, pointList, setHoverOnProcedure, removeHoverOnProcedure } = props;\n\n      const handleClick = (e) => {\n            const data = JSON.stringify({\n                  tagList,\n                  pointList\n            });\n            localStorage.setItem(\"localData\", data);\n      };\n\n      const [mouseEnterHandler, mouseLeaveHandler] = useHoverOnHandler(setHoverOnProcedure, removeHoverOnProcedure, \"hover-on-to-storage\");\n\n      return (\n            <div\n                  className='ToStorage'\n                  onMouseEnter={mouseEnterHandler}\n                  onMouseLeave={mouseLeaveHandler}\n                  onClick={handleClick}>\n                  <DataSpot />\n                  <div className=\"data-flow\"></div>\n            </div>\n      )\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n      tagList: state.tagList,\n      pointList: state.pointList\n});\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n      setHoverOnProcedure: (target) => {\n            dispatch(setHoverOn(target));\n      },\n      removeHoverOnProcedure: () => {\n            dispatch(removeHoverOn());\n      }\n});\n\nexport default connect(\n      mapStateToProps,\n      mapDispatchToProps\n)(ToStorage);","import React from 'react';\nimport './style.scss';\n\nimport DataSpot from '../../common/DataSpot/DataSpot';\n\nimport { connect } from 'react-redux';\nimport { setHoverOn, removeHoverOn, removeUIdata } from '../../../redux/actions/actions';\nimport useHoverOnHandler from '../../../hooks/useHoverOnHandler';\n\n\nconst Erase = (props) => {\n      const { setHoverOnProcedure, removeHoverOnProcedure, removeUIdataProcedure } = props;\n      const [mouseEnterHandler, mouseLeaveHandler] = useHoverOnHandler(setHoverOnProcedure, removeHoverOnProcedure, \"hover-on-erase\");\n      const clickHandler = (e) => {\n            // clear UI data\n            removeUIdataProcedure();\n            // clear storage data\n            localStorage.removeItem(\"localData\");\n      };\n      return (\n            <div\n                  onClick={clickHandler}\n                  className='Erase'\n                  onMouseEnter={mouseEnterHandler}\n                  onMouseLeave={mouseLeaveHandler}>\n                  <DataSpot />\n                  <div className=\"top-remove\">\n                        <div className=\"horizontal\"></div>\n                        <div className=\"vertical\"></div>\n                  </div>\n                  <div className=\"bottom-remove\">\n                        <div className=\"horizontal\"></div>\n                        <div className=\"vertical\"></div>\n                  </div>\n            </div>\n      );\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n\n});\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n      setHoverOnProcedure: (target) => {\n            dispatch(setHoverOn(target));\n      },\n      removeHoverOnProcedure: () => {\n            dispatch(removeHoverOn());\n      },\n      removeUIdataProcedure: ()=>{\n            dispatch(removeUIdata());\n      }\n});\n\nexport default connect(\n      mapStateToProps,\n      mapDispatchToProps\n)(Erase); ","import React, { useCallback } from 'react';\nimport './style.scss';\n\nconst Weekday = (props) => {\n      const setVisibility = useCallback(\n            (domIndex) => {\n                  const date = new Date();\n                  const dayIndex = date.getDay(); // 0 <=> Sun.; 6 <=> Sat.\n\n                  if (domIndex === dayIndex) {\n                        return {\n                              visibility: \"visible\"\n                        };\n                  } else {\n                        return {};\n                  }\n            }, []);\n      const getDateOfThisDom = useCallback(\n            (domIndex) => {\n                  const date = new Date();\n                  const today_date_number = date.getDate();\n                  let today_day_of_week = date.getDay(); // 0 <=> Sun.; 6 <=> Sat.\n\n                  today_day_of_week === 0 && (today_day_of_week = 7);\n                  domIndex === 0 && (domIndex = 7);\n\n                  const dom_date_number = today_date_number + domIndex - today_day_of_week;\n                  return dom_date_number;\n            },\n            []\n      )\n      return (\n            <div className='Weekday'>\n                  {\n                        [1, 2, 3, 4, 5, 6, 0].map((num, i, arr) => {\n                              return (\n                                    <div className=\"day-area\" key={num}>\n                                          <div className=\"day\">\n                                                <div className=\"dom-day\">{getDateOfThisDom(num)}</div>\n                                                <div className=\"today\"\n                                                      style={setVisibility(num)}></div>\n                                          </div>\n                                    </div>\n                              );\n                        })\n                  }\n            </div>\n      );\n}\nexport default Weekday;","import React, { useState, useEffect } from 'react';\nimport './style.scss';\nimport { getCurrentTimeString } from '../../../utils/time';\nimport { addTask, removeTask } from '../../../utils/interval';\nconst Time = (props) => {\n      const [time, setTime] = useState('00:00:00');\n\n      useEffect(() => {\n            const taskIndex = addTask(() => {\n                  // console.log('update time string');\n                  setTime(getCurrentTimeString());\n            })\n            return () => {\n                  // console.log('remove update time string task');\n                  removeTask(taskIndex);\n            };\n      }, []);\n\n      return (\n            <div className='Time'>\n                  {time}\n            </div>\n      );\n}\nexport default Time;","export const getCurrentTimeString = () => {\n      const now = new Date();\n\n      let hour = now.getHours();\n      let minute = now.getMinutes();\n      let second = now.getSeconds();\n\n      hour < 10 && (hour = '0' + hour);\n      minute < 10 && (minute = '0' + minute);\n      second < 10 && (second = '0' + second);\n\n      return hour + ':' + minute + ':' + second;\n}\n\nexport const getCurrentDayString = () => {\n      const now = new Date();\n\n      let year = now.getFullYear();\n      let month = now.getMonth() + 1;\n      let day = now.getDate();\n\n      year < 10 && (year = '0' + year);\n      month < 10 && (month = '0' + month);\n      day < 10 && (day = '0' + day);\n\n      return year + '/' + month + '/' + day;\n};","import React from 'react';\nimport './style.scss';\n\nimport { getCurrentDayString } from '../../../utils/time';\n\nconst Day = (props) => {\n      return (\n            <div className='Day'>\n                  {getCurrentDayString()}\n            </div>\n      );\n}\nexport default Day;","import React from 'react';\nimport './style.scss';\n\nimport Exit from './Exit/Exit';\nimport ToUI from './ToUI/ToUI';\nimport ToStorage from './ToStorage/ToStorage';\nimport Erase from './Erase/Erase';\nimport Weekday from './Weekday/Weekday';\nimport Time from './Time/Time';\nimport Day from './Day/Day';\n\nimport { connect } from 'react-redux';\n\nconst DataControls = (props) => {\n      const { isHoverOnSwitchUI, isHidden } = props;\n\n      let className = \"DataControls\";\n      (isHoverOnSwitchUI || isHidden) && (className += \" hidden\");\n      return (\n            <div className={className}>\n                  <div style={{\n                        width: \"360px\"\n                  }} >\n                        <Exit />\n                        <div className='inner-flex'>\n                              <ToUI />\n                              <ToStorage />\n                              <Erase />\n                        </div>\n                  </div>\n                  <div>\n                        <Weekday />\n                  </div>\n                  <div style={{ width: \"360px\" }}>\n                        <Day />\n                        <Time />\n                  </div>\n            </div>\n      )\n}\n\n\nconst mapStateToProps = (state, ownProps) => ({\n      isHoverOnSwitchUI: state.hoverOn === \"hover-on-switch-ui\",\n      isHidden: state.switchUIstatus\n});\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n\n});\n\nexport default connect(\n      mapStateToProps,\n      mapDispatchToProps\n)(DataControls);","import React, { useEffect } from 'react';\nimport './style.scss';\n\nimport InputControls from '../../components/InputControls/InputControls';\nimport Engine from '../../components/Engine/Engine';\nimport DataControls from '../../components/DataControls/DataControls';\nimport { getInputDom } from '../../utils/domHolder';\n\nimport { withRouter } from \"react-router-dom\";\n\nfunction Manage(props) {\n      const { history } = props;\n\n      useEffect(\n            () => {\n                  const shortcutHandler = (e) => {\n                        // console.log('key down: ', e);\n\n                        if (e.altKey && e.key === 'i') { // alt + i: focus & select input\n                              getInputDom().select();\n                        }\n                        if (e.altKey && e.key === \"p\") { // shift + P: search unfinished point with or without tag list\n                              document.querySelector(\".CircleSearch.search-unfinished\").click();\n                        }\n                        if (e.altKey && e.shiftKey && e.key === \"P\") { // alt + shift + p: search finished point with or without tag list\n                              document.querySelector(\".CircleSearch.search-finished\").click();\n                        }\n                        if (e.altKey && e.key === \"t\") { // alt + t: search tag\n                              document.querySelector(\".CircleSearch.search-tag\").click();\n                        }\n                        if (e.altKey && e.key === \"r\") { // alt + r: return all session list\n                              document.querySelector(\".TagSession .Return\").click();\n                              document.querySelector(\".PointSession .Return\").click();\n                        }\n                        if (!(e.altKey) && e.key === \"Enter\") { // enter: add point from input string  with tag session list\n                              document.querySelector(\".Add .CircleAdd\").click();\n                        }\n                        if (e.altKey && e.key === \"Enter\") { // alt + enter: add tag from input string\n                              document.querySelector(\".AddTag .CircleAdd\").click();\n                        }\n                        if (e.altKey && e.key === \"k\") { // alt + d: delete 2 session list\n                              document.querySelector(\".TagSession .RemoveSession\").click();\n                              document.querySelector(\".PointSession .RemoveSession\").click();\n                        }\n                        if (e.altKey && e.key === \"q\") { // ctrl + q: exit to /entrance\n                              history.push(\"/entrance\");\n                        }\n                  };\n\n                  document.addEventListener(\"keyup\", shortcutHandler, false);\n\n                  document.title = \"Aresun Manage\";\n\n                  return () => {\n                        document.removeEventListener(\"keyup\", shortcutHandler, false);\n                  };\n            }, [history]);\n\n      return (\n            <div className=\"Manage\">\n                  <div>\n                        <InputControls />\n                        <Engine />\n                        <DataControls />\n                  </div>\n            </div>\n      );\n}\n\nexport default withRouter(Manage);","import React, { useEffect } from 'react';\n\n// redux\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\n\n// react router\n// import { BrowserRouter as Router, Route, Redirect } from 'react-router-dom';\n// this is for github page\nimport { HashRouter as Router, Route, Redirect } from 'react-router-dom';\n\n// utils\nimport { start, stop } from './utils/interval';\n\n// components\nimport Entrance from './pages/Entrance/Entrance';\nimport Manage from './pages/Manage/Manage';\n\nfunction App() {\n  useEffect(() => {\n\n    start(500);\n    console.log('started interval');\n\n    return () => {\n      stop();\n    }\n  }, []);\n\n  return (\n    <Provider store={store}>\n      <Router>\n        <Redirect from='/' to='/entrance'></Redirect>\n        <Route exact path='/entrance' component={Entrance} />\n        <Route exact path='/manage' component={Manage} />\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\n\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}